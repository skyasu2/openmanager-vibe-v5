version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ../..:/workspace:cached
    command: sleep infinity
    networks:
      - devcontainer-network
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=development
      - TZ=Asia/Seoul
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=openmanager_dev
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/openmanager_dev?schema=public
      - REDIS_URL=redis://redis:6379

  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_DB: openmanager_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=ko_KR.UTF-8"
    ports:
      - "5432:5432"
    networks:
      - devcontainer-network
    command: >
      postgres
      -c max_connections=200
      -c shared_preload_libraries=pg_stat_statements
      -c pg_stat_statements.track=all
      -c log_statement=all
      -c log_min_duration_statement=0

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis-data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    networks:
      - devcontainer-network
    command: redis-server /usr/local/etc/redis/redis.conf

  # Adminer (PostgreSQL 웹 관리 도구)
  adminer:
    image: adminer:latest
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      - devcontainer-network
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: hydra

  # Redis Commander (Redis 웹 관리 도구)
  redis-commander:
    image: rediscommander/redis-commander:latest
    restart: unless-stopped
    ports:
      - "8081:8081"
    networks:
      - devcontainer-network
    environment:
      REDIS_HOSTS: local:redis:6379

volumes:
  postgres-data:
  redis-data:

networks:
  devcontainer-network:
    driver: bridge 