# 🚀 Render + Cursor IDE 직접 배포 설정
# OpenManager Vibe v5 - MCP 서버 배포 (Cursor 연동)

services:
  - type: web
    name: openmanager-mcp-cursor
    runtime: node
    plan: free
    region: oregon
    branch: main
    rootDir: mcp-server
    
    # 🔧 빌드 및 시작 명령
    buildCommand: |
      echo "🚀 Cursor IDE 연동 빌드 시작..."
      npm ci --production=false
      npm run build
      echo "✅ 빌드 완료"
    
    startCommand: |
      echo "🌟 OpenManager MCP 서버 시작 (Cursor 연동)..."
      npm start
    
    # 🏥 헬스체크 설정
    healthCheckPath: /health
    
    # 🔄 자동 배포 설정 (Cursor에서 푸시 시 자동 배포)
    autoDeploy: true
    
    # 🌐 환경 변수 설정
    envVars:
      - key: NODE_ENV
        value: production
      - key: RENDER
        value: 'true'
      - key: CURSOR_DEPLOY
        value: 'true'
      - key: ENABLE_HTTP
        value: 'true'
      - key: PORT
        value: '10000'
      - key: AI_ENGINE_MODE
        value: 'true'
      - key: NODE_OPTIONS
        value: '--max-old-space-size=512'
      - key: NEXT_TELEMETRY_DISABLED
        value: '1'
      - key: PROJECT_ROOT
        value: /opt/render/project/src
      - key: DEPLOY_SOURCE
        value: 'cursor-ide'
      - key: DEPLOY_TIMESTAMP
        generateValue: true
      
      # 🔐 보안 키 (Render 대시보드에서 수동 설정)
      - key: GITHUB_TOKEN
        sync: false
      - key: SUPABASE_URL
        sync: false
      - key: SUPABASE_ANON_KEY
        sync: false
      - key: UPSTASH_REDIS_REST_URL
        sync: false
      - key: UPSTASH_REDIS_REST_TOKEN
        sync: false
      - key: GOOGLE_AI_API_KEY
        sync: false
    
    # 🔧 빌드 환경 설정
    buildFilter:
      paths:
        - mcp-server/**
        - src/services/mcp/**
        - package.json
        - package-lock.json
      ignoredPaths:
        - docs/**
        - tests/**
        - development/**
        - .storybook/**
    
    # 📊 모니터링 설정
    notifications:
      - type: slack
        name: cursor-deploy-notifications
        channel: "#openmanager-deploy"
        events:
          - deploy-started
          - deploy-succeeded
          - deploy-failed
          - service-suspended
    
    # 🚨 알림 설정
    alerts:
      - rule: cpu > 80
        duration: 5m
      - rule: memory > 90
        duration: 3m
      - rule: response_time > 5s
        duration: 2m

# 🔧 Cursor IDE 연동 설정
cursor_integration:
  # SSH 키 기반 배포
  ssh_deploy:
    enabled: true
    key_path: ~/.ssh/render_cursor_deploy
    
  # Git Hook 설정
  git_hooks:
    pre_push: |
      echo "🔍 Cursor → Render 배포 전 검증..."
      npm run validate:quick
      echo "✅ 검증 완료"
    
    post_push: |
      echo "🚀 Render 배포 트리거됨"
      echo "📍 배포 URL: https://openmanager-mcp-cursor.onrender.com"
  
  # 배포 스크립트
  deploy_scripts:
    quick_deploy: |
      #!/bin/bash
      echo "⚡ Cursor 빠른 배포 시작..."
      git add .
      git commit -m "🚀 Cursor 빠른 배포: $(date)"
      git push origin main
      echo "✅ 배포 완료!"
    
    rollback: |
      #!/bin/bash
      echo "🔄 이전 버전으로 롤백..."
      git revert HEAD --no-edit
      git push origin main
      echo "✅ 롤백 완료!"

# 📝 배포 로그 설정
logging:
  level: info
  format: json
  destinations:
    - console
    - file: /opt/render/project/logs/deploy.log
  
  # Cursor 전용 로그
  cursor_logs:
    enabled: true
    path: /opt/render/project/logs/cursor-deploy.log
    rotation: daily
    retention: 7d

# 🔒 보안 설정
security:
  # CORS 설정 (Cursor IDE 접근 허용)
  cors:
    origins:
      - "vscode-webview://*"
      - "https://*.cursor.sh"
      - "http://localhost:*"
    methods: ["GET", "POST", "PUT", "DELETE"]
    headers: ["Content-Type", "Authorization", "X-Cursor-Token"]
  
  # API 키 보호
  api_protection:
    rate_limit: 100/minute
    ip_whitelist:
      - "0.0.0.0/0" # 개발 단계에서는 모든 IP 허용
    
  # 환경 변수 암호화
  env_encryption:
    enabled: true
    algorithm: AES-256-GCM
    
# 🎯 성능 최적화
performance:
  # 캐시 설정
  cache:
    static_files: 24h
    api_responses: 5m
    
  # 압축 설정
  compression:
    enabled: true
    algorithms: ["gzip", "br"]
    
  # 메모리 최적화
  memory:
    max_heap_size: 400MB
    gc_interval: 30s
    
# 📊 모니터링 및 분석
monitoring:
  # 메트릭 수집
  metrics:
    enabled: true
    interval: 30s
    endpoints:
      - /health
      - /metrics
      - /api/status
    
  # 업타임 모니터링
  uptime:
    check_interval: 60s
    timeout: 10s
    retries: 3
    
  # 성능 추적
  performance_tracking:
    response_time: true
    throughput: true
    error_rate: true
    memory_usage: true
    cpu_usage: true

# 🔧 개발자 도구
dev_tools:
  # 원격 디버깅 (개발 환경에서만)
  remote_debug:
    enabled: false # 프로덕션에서는 비활성화
    port: 9229
    
  # 로그 스트리밍
  log_streaming:
    enabled: true
    websocket_endpoint: /logs/stream
    
  # 상태 대시보드
  status_dashboard:
    enabled: true
    endpoint: /admin/status
    auth_required: true

# 📋 메타데이터
metadata:
  version: "5.44.0"
  created_by: "cursor-ide"
  last_updated: "2024-06-24"
  description: "OpenManager Vibe v5 MCP Server - Cursor IDE 직접 배포용"
  tags:
    - openmanager
    - mcp-server
    - cursor-ide
    - nodejs
    - ai-engine
  
  # 배포 정보
  deploy_info:
    source: "cursor-ide"
    branch: "main"
    auto_deploy: true
    rollback_enabled: true
    
  # 연락처 정보
  contacts:
    developer: "OpenManager Team"
    support: "support@openmanager.dev"
    docs: "https://docs.openmanager.dev" 