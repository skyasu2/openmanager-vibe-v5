{
  "servers": [
    {
      "id": "web-server-1",
      "name": "Web Server #1",
      "hostname": "web-01.prod.example.com",
      "type": "web",
      "role": "Frontend Web Server",
      "service": "Nginx",
      "version": "1.24.0",
      "environment": "production",
      "location": "us-east-1a",
      "provider": "AWS",
      "ip": "10.0.1.10",
      "os": "Ubuntu 22.04 LTS",
      "specs": {
        "cpu_cores": 4,
        "memory_gb": 8,
        "disk_gb": 100,
        "network_speed": "10 Gbps"
      },
      "baseMetrics": {
        "cpu": 25,
        "memory": 40,
        "disk": 35,
        "network": 50
      },
      "description": "Primary web server handling frontend requests and load balancing"
    },
    {
      "id": "api-server-1",
      "name": "API Server #1",
      "hostname": "api-01.prod.example.com",
      "type": "application",
      "role": "REST API Server",
      "service": "Node.js",
      "version": "20.11.0",
      "environment": "production",
      "location": "us-east-1b",
      "provider": "AWS",
      "ip": "10.0.2.10",
      "os": "Ubuntu 22.04 LTS",
      "specs": {
        "cpu_cores": 8,
        "memory_gb": 16,
        "disk_gb": 200,
        "network_speed": "10 Gbps"
      },
      "baseMetrics": {
        "cpu": 35,
        "memory": 55,
        "disk": 45,
        "network": 75
      },
      "description": "Primary API server handling business logic and external integrations"
    },
    {
      "id": "db-master-1",
      "name": "Database Master",
      "hostname": "db-master-01.prod.example.com",
      "type": "database",
      "role": "Primary Database",
      "service": "PostgreSQL",
      "version": "15.6",
      "environment": "production",
      "location": "us-east-1c",
      "provider": "AWS",
      "ip": "10.0.3.10",
      "os": "Ubuntu 22.04 LTS",
      "specs": {
        "cpu_cores": 16,
        "memory_gb": 64,
        "disk_gb": 1000,
        "network_speed": "25 Gbps"
      },
      "baseMetrics": {
        "cpu": 45,
        "memory": 65,
        "disk": 55,
        "network": 85
      },
      "description": "Master database server handling read/write operations"
    },
    {
      "id": "db-replica-1",
      "name": "Database Replica",
      "hostname": "db-replica-01.prod.example.com",
      "type": "database",
      "role": "Read Replica",
      "service": "PostgreSQL",
      "version": "15.6",
      "environment": "production",
      "location": "us-east-1d",
      "provider": "AWS",
      "ip": "10.0.3.20",
      "os": "Ubuntu 22.04 LTS",
      "specs": {
        "cpu_cores": 8,
        "memory_gb": 32,
        "disk_gb": 1000,
        "network_speed": "10 Gbps"
      },
      "baseMetrics": {
        "cpu": 30,
        "memory": 50,
        "disk": 55,
        "network": 60
      },
      "description": "Read-only replica for scaling read operations"
    },
    {
      "id": "cache-server-1",
      "name": "Cache Server #1",
      "hostname": "cache-01.prod.example.com",
      "type": "cache",
      "role": "In-Memory Cache",
      "service": "Redis",
      "version": "7.2.0",
      "environment": "production",
      "location": "us-east-1a",
      "provider": "AWS",
      "ip": "10.0.4.10",
      "os": "Ubuntu 22.04 LTS",
      "specs": {
        "cpu_cores": 4,
        "memory_gb": 32,
        "disk_gb": 50,
        "network_speed": "10 Gbps"
      },
      "baseMetrics": {
        "cpu": 20,
        "memory": 60,
        "disk": 25,
        "network": 45
      },
      "description": "High-performance in-memory cache for session and data caching"
    },
    {
      "id": "storage-server-1",
      "name": "Storage Server #1",
      "hostname": "storage-01.prod.example.com",
      "type": "storage",
      "role": "Object Storage",
      "service": "MinIO",
      "version": "2024.1.16",
      "environment": "production",
      "location": "us-east-1b",
      "provider": "AWS",
      "ip": "10.0.5.10",
      "os": "Ubuntu 22.04 LTS",
      "specs": {
        "cpu_cores": 8,
        "memory_gb": 16,
        "disk_gb": 2000,
        "network_speed": "25 Gbps"
      },
      "baseMetrics": {
        "cpu": 15,
        "memory": 35,
        "disk": 70,
        "network": 90
      },
      "description": "S3-compatible object storage for files, images, and backups"
    },
    {
      "id": "queue-server-1",
      "name": "Message Queue #1",
      "hostname": "queue-01.prod.example.com",
      "type": "queue",
      "role": "Message Broker",
      "service": "RabbitMQ",
      "version": "3.12.10",
      "environment": "production",
      "location": "us-east-1c",
      "provider": "AWS",
      "ip": "10.0.6.10",
      "os": "Ubuntu 22.04 LTS",
      "specs": {
        "cpu_cores": 4,
        "memory_gb": 8,
        "disk_gb": 100,
        "network_speed": "10 Gbps"
      },
      "baseMetrics": {
        "cpu": 25,
        "memory": 45,
        "disk": 40,
        "network": 55
      },
      "description": "Reliable message queue for asynchronous processing and job queuing"
    },
    {
      "id": "monitoring-server-1",
      "name": "Monitoring Server #1",
      "hostname": "monitoring-01.prod.example.com",
      "type": "monitoring",
      "role": "Metrics Collection",
      "service": "Prometheus",
      "version": "2.49.0",
      "environment": "production",
      "location": "us-east-1d",
      "provider": "AWS",
      "ip": "10.0.7.10",
      "os": "Ubuntu 22.04 LTS",
      "specs": {
        "cpu_cores": 8,
        "memory_gb": 32,
        "disk_gb": 500,
        "network_speed": "10 Gbps"
      },
      "baseMetrics": {
        "cpu": 40,
        "memory": 70,
        "disk": 60,
        "network": 65
      },
      "description": "Central monitoring system collecting metrics from all infrastructure"
    }
  ],
  "metadata": {
    "version": "1.0.0",
    "generated": "2025-08-24T00:00:00Z",
    "description": "Portfolio demonstration servers with 24-hour incident scenarios",
    "totalServers": 8,
    "environments": ["production"],
    "providers": ["AWS"],
    "regions": ["us-east-1"],
    "serviceTypes": ["web", "application", "database", "cache", "storage", "queue", "monitoring"]
  }
}