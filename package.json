{
  "name": "openmanager-vibe-v5",
  "version": "5.21.0",
  "description": "🚀 OpenManager AI v5.21.0 - AI 분석과 오토스케일링 완전 분리로 추론 안정성과 운영 시뮬 유연성을 동시에 확보한 차세대 서버 모니터링 시스템. 고정된 8개 AI 분석 타겟으로 일관된 추론을 보장하고, 8-30대 동적 서버 풀로 현실적인 스케일링 시뮬레이션을 제공합니다.",
  "private": true,
  "keywords": [
    "ai-agent",
    "server-monitoring",
    "ai-inference",
    "mcp",
    "nextjs",
    "typescript",
    "optimized"
  ],
  "scripts": {
    "dev": "next dev",
    "dev:clean": "npm run clean:ports && npm run dev",
    "clean:ports": "taskkill /f /im node.exe 2>nul || true",
    "build": "ESLINT_NO_DEV_ERRORS=true next build",
    "start": "next start",
    "lint": "next lint",
    "lint:fix": "next lint --fix",
    "type-check": "tsc --noEmit",
    "test": "vitest",
    "test:watch": "jest --watch",
    "test:coverage": "vitest --coverage",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:headed": "playwright test --headed",
    "storybook": "storybook dev -p 6006",
    "build-storybook": "storybook build",
    "setup:dev": "node scripts/setup-husky.js",
    "db:generate": "drizzle-kit generate",
    "db:migrate": "drizzle-kit migrate",
    "db:studio": "drizzle-kit studio",
    "analyze": "cross-env ANALYZE=true next build",
    "dev:standalone": "next dev -p 3001",
    "dev:integrated": "next dev -p 3001",
    "test:unit": "vitest run --reporter=verbose",
    "test:unit:coverage": "vitest run --coverage",
    "test:e2e:debug": "playwright test --debug",
    "test:e2e:report": "playwright show-report",
    "test:e2e:install": "playwright install",
    "test:all": "npm run test:unit && npm run test:e2e",
    "test:ci": "npm run type-check && npm run lint -- --max-warnings 50 && npm run build",
    "test:quality": "npm run lint && npm run type-check && npm run test:unit",
    "test:enterprise": "node scripts/mockEnterpriseHit.ts",
    "enterprise:seed": "curl -X POST http://localhost:3001/api/enterprise/seed",
    "enterprise:simulate": "curl -X POST http://localhost:3001/api/simulate",
    "health-check": "curl -f http://localhost:3000/api/health || exit 1",
    "health-check:prod": "curl -f https://openmanager-vibe-v5.vercel.app/api/health || exit 1",
    "perf-test": "lighthouse http://localhost:3000 --output=json --output-path=./lighthouse-report.json",
    "audit": "npm audit --audit-level=high",
    "build:clean": "npm run clean && npm run build",
    "build:analyze": "ANALYZE=true npm run build",
    "deploy:preview": "vercel --confirm",
    "deploy:prod": "vercel --prod --confirm",
    "monitor": "npm run health-check:prod && echo '✅ Production health check passed'",
    "init:ai-context": "node scripts/init-ai-context.js",
    "test:ai-engine": "node scripts/test-ai-engine.js",
    "test:optimized-ai": "node scripts/test-optimized-ai.js",
    "ai:optimize": "node scripts/test-optimized-ai.js",
    "ai:benchmark": "node scripts/test-optimized-ai.js --benchmark-only",
    "ai:test-integrated": "node scripts/test-integrated-ai-system.js",
    "ai:integration-test": "npm run ai:test-integrated",
    "ai:setup-test-data": "node scripts/setup-test-data.js",
    "system:validate": "npm run ai:setup-test-data && npm run ai:test-integrated && npm run test:optimized-ai",
    "test:comprehensive": "node scripts/run-comprehensive-tests.js",
    "test:integration": "vitest tests/integration",
    "test:performance": "node scripts/run-comprehensive-tests.js --skip-integration",
    "generate:metrics": "tsx scripts/generate-daily-metrics.ts",
    "generate:metrics:clear": "tsx scripts/generate-daily-metrics.ts --clear",
    "db:setup": "echo 'Run the SQL file: sql/create-daily-metrics-table.sql in your Supabase dashboard'",
    "metrics:help": "echo 'Usage: npm run generate:metrics (add data) | npm run generate:metrics:clear (reset & add)'",
    "test:interpolation": "tsx scripts/test-interpolation.ts",
    "test:interpolation:basic": "tsx scripts/test-interpolation.ts --basic",
    "test:interpolation:bridge": "tsx scripts/test-interpolation.ts --bridge",
    "test:interpolation:performance": "tsx scripts/test-interpolation.ts --performance",
    "test:warmup": "node scripts/test-ai-warmup-system.js",
    "test:warmup:sh": "bash scripts/test-warmup.sh",
    "test:rate-limit": "node scripts/test-rate-limiting.js",
    "load-test": "node scripts/load-test.js",
    "load-test:verbose": "DEBUG=* node scripts/load-test.js",
    "perf:optimize": "npm run build:analyze && npm run perf:vitals",
    "perf:vitals": "lighthouse http://localhost:3000 --chrome-flags='--headless' --output=html --output-path=./reports/lighthouse.html",
    "perf:bundle": "ANALYZE=true npm run build",
    "perf:preload": "echo '🚀 Preload testing - check console for metrics'",
    "perf:monitor": "npm run build && npm run start && npm run perf:vitals",
    "ci:recovery": "bash scripts/ci-recovery.sh",
    "ci:trigger": "git commit --allow-empty -m '🔄 CI 재트리거' && git push origin main",
    "ci:status": "echo '🔗 GitHub Actions: https://github.com/$(git config --get remote.origin.url | sed \"s/.*github.com[:/]\\([^.]*\\).*/\\1/\")/actions'",
    "ci:health": "npm run health-check:prod && npm run lint && npm run type-check",
    "deploy:safe": "npm run ci:health && npm run build && npm run deploy:prod",
    "emergency:rollback": "echo '🚨 Emergency rollback - contact administrator'",
    "verify:production": "npm run health-check:prod && echo '✅ Production verification passed'",
    "deploy": "echo '🚀 GitHub Actions에서 자동 배포가 진행됩니다. Vercel 대시보드를 확인해주세요.'",
    "deploy:dev": "vercel",
    "deploy:skip-ci": "echo '⚠️ GitHub Actions를 사용해주세요: git push origin main'",
    "deploy:local": "npm run build && echo '🏗️ 로컬 빌드 완료. GitHub Actions로 배포하세요.'",
    "deploy:quick": "git add -A && git commit -m '🚀 빠른 배포' && git push origin main",
    "deploy:github": "git push origin main && echo '🚀 GitHub Actions 배포 트리거됨'",
    "consolidate": "node scripts/consolidate-project.js",
    "consolidate:report": "node scripts/consolidate-project.js && cat CONSOLIDATION_REPORT.md",
    "project:analyze": "node scripts/consolidate-project.js --analyze-only",
    "project:cleanup": "node scripts/consolidate-project.js --cleanup-only",
    "project:optimize": "npm run project:cleanup && npm run consolidate && npm run test:quality",
    "deploy-check": "npm run test:ci && echo '✅ 배포 준비 완료'",
    "preview": "npm run build && npm run start",
    "clean": "rm -rf .next && rm -rf node_modules && npm install"
  },
  "dependencies": {
    "@faker-js/faker": "^9.8.0",
    "@fortawesome/fontawesome-free": "^6.7.2",
    "@fortawesome/free-solid-svg-icons": "^6.7.2",
    "@fortawesome/react-fontawesome": "^0.2.2",
    "@headlessui/react": "^2.2.4",
    "@heroicons/react": "^2.2.0",
    "@influxdata/influxdb-client": "^1.35.0",
    "@modelcontextprotocol/sdk": "^1.12.1",
    "@modelcontextprotocol/server-filesystem": "^2025.3.28",
    "@modelcontextprotocol/server-github": "^2025.4.8",
    "@modelcontextprotocol/server-postgres": "^0.6.2",
    "@next/bundle-analyzer": "^15.4.0-canary.51",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-tabs": "^1.1.12",
    "@supabase/supabase-js": "^2.49.8",
    "@tailwindcss/line-clamp": "^0.4.4",
    "@tanstack/react-query": "^5.79.0",
    "@tanstack/react-query-devtools": "^5.79.0",
    "@tanstack/react-virtual": "^3.13.9",
    "@tensorflow/tfjs": "^4.22.0",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/ioredis": "^4.28.10",
    "@types/node": "^20.17.50",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "@typescript-eslint/eslint-plugin": "^8.32.1",
    "@typescript-eslint/parser": "^8.32.1",
    "@upstash/redis": "^1.34.3",
    "@use-gesture/react": "^10.3.1",
    "@vercel/kv": "^3.0.0",
    "@xenova/transformers": "^2.12.1",
    "autoprefixer": "^10.4.21",
    "axios": "^1.7.9",
    "chart.js": "^4.4.9",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "compression": "^1.8.0",
    "compromise": "^14.14.4",
    "critters": "^0.0.24",
    "d3": "^7.9.0",
    "date-fns": "^4.1.0",
    "eslint": "^9",
    "eslint-config-next": "15.1.8",
    "framer-motion": "^12.15.0",
    "fuse.js": "^7.1.0",
    "git-mob-mcp-server": "^1.0.10",
    "ioredis": "^5.6.1",
    "jspdf": "^3.0.1",
    "lucide-react": "^0.511.0",
    "marked": "^15.0.12",
    "ml-matrix": "^6.12.1",
    "ml-regression": "^6.3.0",
    "natural": "^8.1.0",
    "next": "^15.3.2",
    "node-cron": "^4.0.7",
    "pdf-parse": "^1.1.1",
    "postcss": "^8",
    "react": "^19.1.0",
    "react-chartjs-2": "^5.3.0",
    "react-dom": "^19.1.0",
    "react-hot-toast": "^2.5.2",
    "react-use-gesture": "^9.1.3",
    "recharts": "^2.15.3",
    "redis": "^5.1.1",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.2",
    "simple-statistics": "^7.8.8",
    "socket.io": "^4.8.1",
    "socket.io-client": "^4.8.1",
    "tailwind-merge": "^3.3.0",
    "tailwindcss": "^3.4.1",
    "typescript": "^5",
    "uuid": "^11.0.5",
    "vaul": "^1.1.2",
    "ws": "^8.18.2",
    "zod": "^3.25.46",
    "zustand": "^5.0.5"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3",
    "@playwright/test": "^1.52.0",
    "@storybook/addon-essentials": "^8.6.14",
    "@storybook/addon-interactions": "^8.6.14",
    "@storybook/nextjs": "^8.6.14",
    "@storybook/react": "^8.6.14",
    "@vitejs/plugin-react": "^4.5.1",
    "@vitest/coverage-v8": "^3.2.1",
    "@vitest/ui": "^3.2.1",
    "cross-env": "^7.0.3",
    "dotenv": "^16.5.0",
    "jest-environment-jsdom": "^30.0.0-beta.3",
    "playwright": "^1.52.0",
    "rimraf": "^6.0.1",
    "storybook": "^8.6.14",
    "tsx": "^4.19.2",
    "vitest": "^3.2.1"
  }
}
