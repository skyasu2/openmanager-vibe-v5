{
  "name": "openmanager-vibe-v5",
  "version": "5.66.20",
  "private": true,
  "scripts": {
    "dev": "cross-env NODE_OPTIONS='--max-old-space-size=8192' next dev",
    "dev:turbo": "cross-env NODE_OPTIONS='--max-old-space-size=8192' next dev --turbo",
    "dev:verbose": "cross-env DEBUG=* next dev",
    "dev:mock": "cross-env MOCK_MODE=force NODE_OPTIONS='--max-old-space-size=8192' next dev",
    "dev:real": "cross-env MOCK_MODE=off NODE_OPTIONS='--max-old-space-size=8192' next dev",
    "dev:hybrid": "cross-env MOCK_MODE=dev NODE_OPTIONS='--max-old-space-size=8192' next dev",
    "build": "cross-env NODE_OPTIONS='--max-old-space-size=4096' next build",
    "build:analyze": "cross-env ANALYZE=true next build",
    "build:trace": "cross-env NEXT_TELEMETRY_DEBUG=1 next build",
    "build:memory": "cross-env NODE_OPTIONS='--max-old-space-size=8192 --trace-gc' next build",
    "start": "next start",
    "start:prod": "cross-env NODE_ENV=production next start",
    "lint": "next lint",
    "lint:fix": "next lint --fix",
    "lint:strict": "next lint --max-warnings=0",
    "lint:timing": "TIMING=1 next lint",
    "lint:files": "next lint --file",
    "lint:fast": "eslint --config .eslintrc.performance.json --no-eslintrc --cache --cache-location .next/cache/eslint/ --ext .ts,.tsx,.js,.jsx --max-warnings=20",
    "lint:quick": "eslint --config .eslintrc.performance.json --no-eslintrc --cache --cache-location .next/cache/eslint/ --ext .ts,.tsx,.js,.jsx --max-warnings=10 --ignore-pattern '**/*.test.*' --ignore-pattern '**/*.spec.*'",
    "lint:staged": "lint-staged",
    "lint:incremental": "bash -c 'files=$(git diff --cached --name-only --diff-filter=ACMR | grep -E \"\\.(ts|tsx|js|jsx)$\" | head -10); if [ -n \"$files\" ]; then eslint --config .eslintrc.performance.json --no-eslintrc --cache --cache-location .next/cache/eslint/ $files; else echo \"No files to lint\"; fi'",
    "lint:changed": "bash -c 'files=$(git diff --name-only HEAD~1 | grep -E \"\\.(ts|tsx|js|jsx)$\" | head -20); if [ -n \"$files\" ]; then eslint --config .eslintrc.performance.json --no-eslintrc --cache --cache-location .next/cache/eslint/ $files; else echo \"No changed files to lint\"; fi'",
    "format": "prettier --write \"src/**/*.{js,jsx,ts,tsx,json,css,scss,md}\"",
    "format:check": "prettier --check \"src/**/*.{js,jsx,ts,tsx,json,css,scss,md}\"",
    "test": "cross-env USE_REAL_REDIS=false vitest",
    "test:watch": "cross-env USE_REAL_REDIS=false vitest --watch",
    "test:coverage": "cross-env USE_REAL_REDIS=false vitest --coverage",
    "test:ui": "cross-env USE_REAL_REDIS=false vitest --ui",
    "test:unit": "cross-env USE_REAL_REDIS=false vitest run src/test/*.test.ts --pool=threads --poolOptions.threads.singleThread=false --test-timeout=8000",
    "test:quick": "cross-env USE_REAL_REDIS=false vitest run src/test/*.test.ts --exclude='**/performance-*.test.ts' --exclude='**/*.e2e.test.ts' --exclude='**/IncidentReportService-*.test.ts' --pool=forks --poolOptions.forks.singleFork=false --test-timeout=4000",
    "test:pre-push": "cross-env USE_REAL_REDIS=false vitest run src/test/env.test.ts src/test/simplified-ai.test.ts src/test/ai-engine.test.ts --reporter=basic --no-coverage --bail=1 --pool=forks --test-timeout=5000",
    "test:pre-push-fast": "cross-env USE_REAL_REDIS=false vitest run src/test/env.test.ts --reporter=basic --no-coverage --bail=1 --pool=forks --test-timeout=3000",
    "test:integration": "cross-env USE_REAL_REDIS=false vitest run src/test/integration/*.test.ts",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:all": "npm run test:unit && npm run test:integration && npm run test:e2e",
    "type-check": "tsc --noEmit",
    "test:core": "vitest run src/test/*.test.ts --reporter=verbose",
    "test:specific": "vitest run --reporter=verbose",
    "test:redis": "vitest run src/lib/redis-client.test.ts --reporter=verbose",
    "test:fallback": "vitest run tests/unit/fallback-data.test.ts --reporter=verbose",
    "test:circuit": "vitest run src/test/circuit-breaker.test.ts --reporter=verbose",
    "test:env": "cross-env USE_REAL_REDIS=false vitest run src/test/env.config.test.ts --reporter=verbose",
    "test:supabase": "vitest run src/services/ai/__tests__/supabase-rag-engine.test.ts --reporter=verbose",
    "test:unified": "vitest run src/services/data-collection/__tests__/UnifiedDataBroker.test.ts --reporter=verbose",
    "test:error-handling": "vitest run src/services/ai/__tests__/error-handling-fallback.test.ts --reporter=verbose",
    "test:setup": "vitest run tests/unit/test-setup.test.ts --reporter=verbose",
    "test:debug": "cross-env DEBUG=* USE_REAL_REDIS=false vitest",
    "test:node": "vitest run --config vitest.node.config.ts",
    "test:utils": "vitest run --config vitest.node.config.ts tests/unit/koreanTime.test.ts",
    "postinstall": "node scripts/postinstall.js || true",
    "prepare": "husky || true",
    "validate": "npm run type-check && npm run lint && npm run test:unit",
    "validate:all": "npm run type-check && npm run lint && npm run test:all",
    "test:metadata": "tsx scripts/test-metadata.ts",
    "test:cleanup": "tsx scripts/test-metadata.ts && npm run test:metadata",
    "test:tdd-cleanup": "tsx scripts/tdd-cleanup.ts",
    "test:tdd-check": "tsx scripts/tdd-cleanup.ts --check",
    "pre-commit:tdd-check": "npm run test:tdd-check",
    "clean": "rm -rf .next node_modules/.cache",
    "clean:all": "rm -rf .next node_modules package-lock.json && npm install",
    "analyze": "cross-env ANALYZE=true npm run build",
    "deps:check": "npm list | grep -E \"(UNMET|missing:)\" || echo 'All dependencies satisfied'",
    "deps:update": "npm update && npm audit fix",
    "docs:generate": "typedoc --out docs/api src",
    "ci": "npm run validate:all",
    "check:types": "tsc --noEmit",
    "check:format": "prettier --check \"src/**/*.{js,jsx,ts,tsx,json,css,scss,md}\"",
    "check:lint": "next lint --max-warnings=0",
    "check:all": "npm run check:types && npm run check:format && npm run check:lint",
    "check:lint:fast": "eslint_d --cache --cache-location .next/cache/eslint/ --ext .ts,.tsx,.js,.jsx --max-warnings=0 src/",
    "ci:lint": "npm run lint:fast -- --format=json --output-file=eslint-report.json || npm run lint",
    "health:check": "node scripts/health-check.js",
    "bundle:analyze": "cross-env BUNDLE_ANALYZE=browser npm run build",
    "bundle:server": "cross-env BUNDLE_ANALYZE=server npm run build",
    "bundle:both": "cross-env BUNDLE_ANALYZE=both npm run build",
    "git:pre-commit": "lint-staged",
    "git:pre-push": "npm run validate",
    "docker:build": "docker build -t openmanager-vibe-v5 .",
    "docker:run": "docker run -p 3000:3000 openmanager-vibe-v5",
    "docker:compose": "docker-compose up",
    "db:migrate": "prisma migrate dev",
    "db:push": "prisma db push",
    "db:generate": "prisma generate",
    "db:studio": "prisma studio",
    "gcp:deploy": "bash scripts/deployment/deploy-all.sh",
    "gcp:deploy:nlp": "bash scripts/deployment/deploy-korean-nlp.sh",
    "gcp:deploy:ml": "bash scripts/deployment/deploy-ml-analytics.sh",
    "gcp:deploy:ai": "bash scripts/deployment/deploy-unified-ai.sh",
    "gcp:logs": "gcloud functions logs read --limit 50",
    "vercel:dev": "vercel dev",
    "vercel:build": "vercel build",
    "vercel:deploy": "vercel --prod",
    "mcp:reset": "bash scripts/mcp/reset.sh",
    "mcp:test": "node scripts/mcp/test-connection.js",
    "mock:status": "node scripts/check-mock-status.js",
    "mock:stats": "node scripts/mock-stats.js",
    "check:usage": "node scripts/check-free-tier-usage.js",
    "redis:test": "node scripts/test-redis.js",
    "redis:monitor": "node scripts/monitor-redis.js",
    "perf:analyze": "node scripts/performance/analyze.js",
    "perf:report": "node scripts/performance/report.js",
    "perf:lint-benchmark": "node scripts/performance/lint-benchmark.js",
    "perf:precommit-benchmark": "node scripts/performance/precommit-benchmark.js",
    "perf:all-benchmarks": "npm run perf:lint-benchmark && npm run perf:precommit-benchmark",
    "perf:quick": "node scripts/performance/quick-benchmark.js",
    "security:audit": "npm audit --audit-level=moderate",
    "security:fix": "npm audit fix",
    "security:check-types": "echo 'üîç TypeScript any ÌÉÄÏûÖ Í≤ÄÏÇ¨ Ï§ë...' && grep -r ': any' src/ --include='*.ts' --include='*.tsx' | wc -l | awk '{print \"Î∞úÍ≤¨Îêú any ÌÉÄÏûÖ: \" $1 \"Í∞ú\"}'",
    "security:check-types-strict": "eslint --ext .ts,.tsx --rule '@typescript-eslint/no-explicit-any: error' src/ --max-warnings=0",
    "security:check-all": "npm run security:audit && npm run security:check-types",
    "workspace:clean": "npm run clean:all && npm install",
    "workspace:reset": "rm -rf node_modules .next package-lock.json && npm install && npm run build",
    "debug:typescript": "tsc --listFiles",
    "debug:imports": "madge --circular src",
    "update:deps": "npx npm-check-updates -u && npm install",
    "env:check": "node scripts/check-env.js",
    "env:generate": "node scripts/generate-env.js",
    "fix:clock": "bash scripts/fix-clock-sync.sh",
    "fix:auth": "npm run fix:clock && npm run clean:auth",
    "clean:auth": "node -e \"if(typeof window !== 'undefined'){localStorage.removeItem('sb-auth-token');localStorage.removeItem('auth_verified');console.log('Auth tokens cleared')}\""
  },
  "dependencies": {
    "@emotion/is-prop-valid": "^1.3.1",
    "@faker-js/faker": "^9.9.0",
    "@google/generative-ai": "^0.24.1",
    "@heroicons/react": "^2.2.0",
    "@next/bundle-analyzer": "15.1.5",
    "@octokit/rest": "^21.0.2",
    "@radix-ui/react-accordion": "^1.2.11",
    "@radix-ui/react-alert-dialog": "^1.1.4",
    "@radix-ui/react-collapsible": "^1.1.11",
    "@radix-ui/react-dialog": "^1.1.4",
    "@radix-ui/react-dropdown-menu": "^2.1.4",
    "@radix-ui/react-icons": "^1.3.2",
    "@radix-ui/react-label": "^2.1.1",
    "@radix-ui/react-popover": "^1.1.4",
    "@radix-ui/react-progress": "^1.1.1",
    "@radix-ui/react-scroll-area": "^1.2.9",
    "@radix-ui/react-select": "^2.1.4",
    "@radix-ui/react-separator": "^1.1.1",
    "@radix-ui/react-slot": "^1.1.1",
    "@radix-ui/react-switch": "^1.1.2",
    "@radix-ui/react-tabs": "^1.1.2",
    "@radix-ui/react-toast": "^1.2.14",
    "@radix-ui/react-tooltip": "^1.1.6",
    "@supabase/ssr": "^0.5.2",
    "@supabase/supabase-js": "^2.48.0",
    "@tanstack/react-query": "^5.66.1",
    "@tanstack/react-query-devtools": "^5.66.1",
    "@upstash/redis": "^1.34.3",
    "@use-gesture/react": "^10.3.1",
    "@vercel/analytics": "^1.3.1",
    "@vercel/kv": "^2.0.0",
    "@vercel/speed-insights": "^1.0.12",
    "axios": "^1.7.3",
    "bcryptjs": "^2.4.3",
    "bull": "^4.16.0",
    "chart.js": "^4.5.0",
    "class-variance-authority": "^0.7.0",
    "clsx": "^2.1.1",
    "cmdk": "^1.0.0",
    "crypto-js": "^4.2.0",
    "date-fns": "^3.6.0",
    "dotenv": "^16.4.5",
    "embla-carousel-react": "^8.1.8",
    "express-rate-limit": "^7.4.0",
    "framer-motion": "^11.3.21",
    "gray-matter": "^4.0.3",
    "input-otp": "^1.2.4",
    "ioredis": "^5.4.1",
    "jose": "^5.6.3",
    "langchain": "^0.2.12",
    "lucide-react": "^0.441.0",
    "mdast-util-toc": "^7.1.0",
    "mermaid": "^11.9.0",
    "monaco-editor": "^0.52.0",
    "next": "^15.4.5",
    "next-auth": "5.0.0-beta.25",
    "next-intl": "^3.17.2",
    "next-mdx-remote": "^5.0.0",
    "next-themes": "^0.3.0",
    "openai": "^4.55.1",
    "pg": "^8.12.0",
    "posthog-js": "^1.165.0",
    "posthog-node": "^4.2.0",
    "prismjs": "^1.29.0",
    "react": "18.3.1",
    "react-chartjs-2": "^5.3.0",
    "react-dom": "18.3.1",
    "react-error-boundary": "^4.0.13",
    "react-hook-form": "^7.52.2",
    "react-hot-toast": "^2.4.1",
    "react-hotkeys-hook": "^4.5.0",
    "react-intersection-observer": "^9.13.0",
    "react-markdown": "^9.0.1",
    "react-redux": "^9.1.2",
    "react-resizable-panels": "^2.0.23",
    "react-use": "^17.5.1",
    "react-wrap-balancer": "^1.1.1",
    "reading-time": "^1.5.0",
    "recharts": "^2.12.7",
    "redis": "^4.7.0",
    "rehype-autolink-headings": "^7.1.0",
    "rehype-code-titles": "^1.2.0",
    "rehype-pretty-code": "^0.13.2",
    "rehype-slug": "^6.0.0",
    "remark": "^15.0.1",
    "remark-gfm": "^4.0.0",
    "rxjs": "^7.8.1",
    "sharp": "^0.33.4",
    "shiki": "^1.12.1",
    "socket.io": "^4.8.0",
    "socket.io-client": "^4.8.0",
    "sonner": "^1.5.0",
    "swr": "^2.2.5",
    "tailwind-merge": "^2.5.2",
    "tailwindcss-animate": "^1.0.7",
    "ts-node": "^10.9.2",
    "unist-builder": "^4.0.0",
    "unist-util-visit": "^5.0.0",
    "use-debounce": "^10.0.3",
    "usehooks-ts": "^3.1.0",
    "uuid": "^10.0.0",
    "vaul": "^0.9.1",
    "winston": "^3.14.0",
    "zod": "^3.23.8",
    "zustand": "^4.5.4"
  },
  "devDependencies": {
    "@playwright/test": "^1.49.1",
    "@testing-library/dom": "^10.4.0",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.1.0",
    "@testing-library/user-event": "^14.5.2",
    "@types/crypto-js": "^4.2.2",
    "@types/jest": "^29.5.13",
    "@types/mdast": "^4.0.4",
    "@types/node": "^22.5.0",
    "@types/pg": "^8.11.6",
    "@types/prismjs": "^1.26.4",
    "@types/react": "^18.3.3",
    "@types/react-dom": "^18.3.0",
    "@types/socket.io": "^3.0.2",
    "@types/uuid": "^10.0.0",
    "@typescript-eslint/eslint-plugin": "^8.2.0",
    "@typescript-eslint/parser": "^8.2.0",
    "@vitejs/plugin-react": "^4.3.2",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/ui": "^3.2.4",
    "autoprefixer": "^10.4.20",
    "cross-env": "^7.0.3",
    "eslint": "^8.57.0",
    "eslint_d": "^14.3.0",
    "eslint-config-next": "15.0.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-jsx-a11y": "^6.9.0",
    "eslint-plugin-prettier": "^5.2.1",
    "eslint-plugin-react-hooks": "^5.1.0",
    "glob": "^11.0.0",
    "husky": "^9.1.7",
    "jsdom": "^26.0.0",
    "lint-staged": "^16.1.2",
    "playwright": "^1.49.1",
    "postcss": "^8.4.49",
    "prettier": "^3.4.2",
    "prettier-plugin-tailwindcss": "^0.6.14",
    "tailwindcss": "^3.4.17",
    "tsx": "^4.19.2",
    "typescript": "^5.7.2",
    "vite": "^6.3.5",
    "vitest": "^3.2.4"
  },
  "engines": {
    "node": ">=20.0.0",
    "npm": ">=10.0.0"
  },
  "packageManager": "npm@10.9.2",
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --config .eslintrc.performance.json --no-eslintrc --cache --cache-location .next/cache/eslint/ --fix",
      "prettier --write"
    ],
    "*.{json,md,mdx,css,scss}": [
      "prettier --write"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "pre-push": "npm run validate"
    }
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "prettier": {
    "semi": true,
    "singleQuote": true,
    "tabWidth": 2,
    "trailingComma": "es5",
    "printWidth": 80,
    "bracketSpacing": true,
    "arrowParens": "always",
    "endOfLine": "lf",
    "plugins": [
      "prettier-plugin-tailwindcss"
    ]
  },
  "auto-install-peers": true
}
