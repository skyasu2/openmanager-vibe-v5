{
  "name": "openmanager-vibe-v5",
  "version": "5.41.3",
  "description": "🚀 OpenManager AI v5.21.0 - AI 분석과 오토스케일링 완전 분리로 추론 안정성과 운영 시뮬 유연성을 동시에 확보한 차세대 서버 모니터링 시스템. 고정된 8개 AI 분석 타겟으로 일관된 추론을 보장하고, 8-30대 동적 서버 풀로 현실적인 스케일링 시뮬레이션을 제공합니다.",
  "private": true,
  "keywords": [
    "ai-agent",
    "server-monitoring",
    "ai-inference",
    "mcp",
    "nextjs",
    "typescript",
    "optimized"
  ],
  "scripts": {
    "dev": "next dev",
    "dev:clean": "npm run clean:ports && npm run dev",
    "clean:ports": "taskkill /f /im node.exe 2>nul || true",
    "cleanup:servers": "node development/scripts/cleanup-servers.js",
    "restart:dev": "node development/scripts/cleanup-servers.js --start",
    "test:ai-agent": "node development/scripts/test-ai-agent.js",
    "server:status": "node development/scripts/server-manager.js status",
    "server:start:main": "node development/scripts/server-manager.js start main",
    "server:start:mcp": "node development/scripts/server-manager.js start mcp",
    "server:start:test": "node development/scripts/server-manager.js start test",
    "server:restart:main": "node development/scripts/server-manager.js restart main",
    "server:restart:mcp": "node development/scripts/server-manager.js restart mcp",
    "server:restart:test": "node development/scripts/server-manager.js restart test",
    "server:stop:all": "node development/scripts/server-manager.js stop all",
    "server:auto": "node development/scripts/server-manager.js auto",
    "dev:port:3200": "cross-env PORT=3200 next dev",
    "dev:port:3201": "cross-env PORT=3201 next dev",
    "mcp:port:3100": "cd mcp-server && cross-env PORT=3100 npm start",
    "build": "cross-env ESLINT_NO_DEV_ERRORS=true next build",
    "start": "next start",
    "lint": "next lint",
    "lint:fix": "next lint --fix",
    "type-check": "tsc --noEmit",
    "test": "vitest",
    "test:watch": "jest --watch",
    "test:coverage": "vitest --coverage",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:headed": "playwright test --headed",
    "storybook": "storybook dev -p 6006",
    "storybook:dev": "storybook dev -p 6006 --no-open",
    "storybook:docs": "storybook dev -p 6006 --docs",
    "setup:dev": "node development/scripts/setup-husky.js",
    "db:generate": "drizzle-kit generate",
    "db:migrate": "drizzle-kit migrate",
    "db:studio": "drizzle-kit studio",
    "analyze": "cross-env ANALYZE=true next build",
    "dev:standalone": "next dev -p 3001",
    "dev:integrated": "next dev -p 3001",
    "test:unit": "vitest run --reporter=verbose",
    "test:unit:coverage": "vitest run --coverage",
    "test:e2e:debug": "playwright test --debug",
    "test:e2e:report": "playwright show-report",
    "test:e2e:install": "playwright install",
    "test:all": "npm run test:unit && npm run test:e2e",
    "test:ci": "npm run type-check && npm run lint -- --max-warnings 50 && npm run build",
    "test:quality": "npm run lint && npm run type-check && npm run test:unit",
    "test:enterprise": "node development/scripts/mockEnterpriseHit.ts",
    "enterprise:seed": "curl -X POST http://localhost:3001/api/enterprise/seed",
    "enterprise:simulate": "curl -X POST http://localhost:3001/api/simulate",
    "health-check": "curl -f http://localhost:3000/api/health || exit 1",
    "health-check:prod": "curl -f https://openmanager-vibe-v5.vercel.app/api/health || exit 1",
    "perf-test": "lighthouse http://localhost:3000 --output=json --output-path=./lighthouse-report.json",
    "audit": "npm audit --audit-level=high",
    "build:clean": "npm run clean && npm run build",
    "build:analyze": "ANALYZE=true npm run build",
    "deploy:preview": "vercel --confirm",
    "deploy:prod": "vercel --prod --confirm",
    "monitor": "npm run health-check:prod && echo '✅ Production health check passed'",
    "init:ai-context": "node development/scripts/init-ai-context.js",
    "test:ai-engine": "node development/scripts/test-ai-engine.js",
    "test:optimized-ai": "node development/scripts/test-optimized-ai.js",
    "ai:optimize": "node development/scripts/test-optimized-ai.js",
    "ai:benchmark": "node development/scripts/test-optimized-ai.js --benchmark-only",
    "ai:test-integrated": "node development/scripts/test-integrated-ai-system.js",
    "ai:integration-test": "npm run ai:test-integrated",
    "ai:setup-test-data": "node development/scripts/setup-test-data.js",
    "system:validate": "npm run ai:setup-test-data && npm run ai:test-integrated && npm run test:optimized-ai",
    "test:comprehensive": "node development/scripts/run-comprehensive-tests.js",
    "test:integration": "vitest development/tests/integration",
    "test:performance": "node development/scripts/run-comprehensive-tests.js --skip-integration",
    "generate:metrics": "tsx development/scripts/analysis/generate-daily-metrics.ts",
    "generate:metrics:clear": "tsx development/scripts/analysis/generate-daily-metrics.ts --clear",
    "db:setup": "echo 'Run the SQL file: sql/create-daily-metrics-table.sql in your Supabase dashboard'",
    "metrics:help": "echo 'Usage: npm run generate:metrics (add data) | npm run generate:metrics:clear (reset & add)'",
    "test:interpolation": "tsx development/scripts/test-interpolation.ts",
    "test:interpolation:basic": "tsx development/scripts/test-interpolation.ts --basic",
    "test:interpolation:bridge": "tsx development/scripts/test-interpolation.ts --bridge",
    "test:interpolation:performance": "tsx development/scripts/test-interpolation.ts --performance",
    "test:warmup": "node development/scripts/test-ai-warmup-system.js",
    "test:warmup:sh": "bash development/scripts/test-warmup.sh",
    "test:rate-limit": "node development/scripts/test-rate-limiting.js",
    "load-test": "node development/scripts/load-test.js",
    "load-test:verbose": "DEBUG=* node development/scripts/load-test.js",
    "perf:optimize": "npm run build:analyze && npm run perf:vitals",
    "perf:vitals": "lighthouse http://localhost:3000 --chrome-flags='--headless' --output=html --output-path=./reports/lighthouse.html",
    "perf:bundle": "ANALYZE=true npm run build",
    "perf:preload": "echo '🚀 Preload testing - check console for metrics'",
    "perf:monitor": "npm run build && npm run start && npm run perf:vitals",
    "ci:recovery": "bash development/scripts/ci-recovery.sh",
    "ci:trigger": "git commit --allow-empty -m '🔄 CI 재트리거' && git push origin main",
    "ci:status": "echo '🔗 GitHub Actions: https://github.com/$(git config --get remote.origin.url | sed \"s/.*github.com[:/]\\([^.]*\\).*/\\1/\")/actions'",
    "ci:health": "npm run health-check:prod && npm run lint && npm run type-check",
    "deploy:safe": "npm run validate:all && echo '✅ 검증 통과 - 배포 진행' && git push origin main",
    "emergency:rollback": "echo '🚨 Emergency rollback - contact administrator'",
    "verify:production": "npm run health-check:prod && echo '✅ Production verification passed'",
    "deploy": "echo '🚀 GitHub Actions에서 자동 배포가 진행됩니다. Vercel 대시보드를 확인해주세요.'",
    "deploy:dev": "vercel",
    "deploy:skip-ci": "echo '⚠️ GitHub Actions를 사용해주세요: git push origin main'",
    "deploy:local": "npm run build && echo '🏗️ 로컬 빌드 완료. GitHub Actions로 배포하세요.'",
    "deploy:quick": "git add -A && git commit -m '🚀 빠른 배포' && git push origin main",
    "deploy:github": "git push origin main && echo '🚀 GitHub Actions 배포 트리거됨'",
    "deploy:v5.21.0": "development/scripts/deploy-v5.21.0.bat",
    "deploy:bash": "bash development/scripts/deploy-v5.21.0.sh",
    "prepare": "husky",
    "pre-commit": "lint-staged",
    "pre-push": "npm run validate:all",
    "validate:all": "npm run type-check && npm run lint && npm run test:unit && npm run build",
    "validate:quick": "npm run type-check && npm run lint",
    "consolidate": "node development/scripts/consolidate-project.js",
    "consolidate:report": "node development/scripts/consolidate-project.js && cat CONSOLIDATION_REPORT.md",
    "mcp:setup": "node development/scripts/setup-mcp.js",
    "mcp:install": "npm install -g @modelcontextprotocol/server-filesystem",
    "mcp:full-setup": "npm run mcp:install && npm run mcp:setup",
    "project:analyze": "node development/scripts/consolidate-project.js --analyze-only",
    "project:cleanup": "node development/scripts/consolidate-project.js --cleanup-only",
    "project:optimize": "npm run project:cleanup && npm run consolidate && npm run test:quality",
    "deploy-check": "npm run test:ci && echo '✅ 배포 준비 완료'",
    "preview": "npm run build && npm run start",
    "clean": "rm -rf .next && rm -rf node_modules && npm install",
    "render:build": "export NODE_ENV=production && export RENDER=true && npm ci && npm install @modelcontextprotocol/server-filesystem @smithery/cli canvas && npm run build",
    "render:start": "export NODE_ENV=production && export RENDER=true && npm start",
    "render:dev": "export RENDER=true && npm run dev",
    "render:setup": "npm run mcp:install && cp render-mcp-config.json .cursor/mcp-config.json",
    "render:mcp:setup": "cp mcp-render.json .cursor/mcp.json && echo '🔧 Render MCP 설정 적용 완료'",
    "render:ai:setup": "cp mcp-render-ai.json .cursor/mcp.json && echo '🤖 AI 엔진 순수 설정 적용 완료'",
    "render:ai:production": "cp mcp-config/ai-engine/production.json .cursor/mcp.json && echo '🚀 AI 엔진 고성능 프로덕션 설정 적용'",
    "ai:dev": "cp mcp-config/ai-engine/development.json .cursor/mcp.json && echo '🛠️ AI 엔진 개발용 설정 적용'",
    "ai:production": "cp mcp-config/ai-engine/production.json .cursor/mcp.json && echo '🚀 AI 엔진 프로덕션용 설정 적용'",
    "render:test": "export RENDER=true && npm run test:unit",
    "mcp:test": "node development/scripts/test-mcp-connection.js",
    "mcp:setup-cursor": "echo '🔧 MCP 설정 완료 - Cursor를 재시작하세요'",
    "mcp:install-packages": "npx -y @modelcontextprotocol/server-filesystem && npx -y @modelcontextprotocol/server-duckduckgo-search && npx -y @modelcontextprotocol/server-sequential-thinking",
    "mcp:setup-dev-tools": "node development/scripts/setup-mcp-dev-tools.js",
    "mcp:full-dev-setup": "npm run mcp:setup-dev-tools && echo '✅ 모든 MCP 개발 도구 설정 완료! Cursor를 재시작하세요.'",
    "mcp:status": "node development/scripts/mcp-health-check.js status",
    "mcp:activate": "node development/scripts/mcp-health-check.js activate",
    "mcp:deactivate": "node development/scripts/mcp-health-check.js deactivate",
    "mcp:dev": "npm run mcp:servers:start && echo '✅ MCP 개발환경 시작 완료!'",
    "mcp:dev:background": "node ./mcp-server/server.js &",
    "mcp:reset": "taskkill /f /im node.exe 2>nul || true && npm run mcp:dev",
    "mcp:local:status": "curl -f http://localhost:3100/health || echo '❌ MCP 서버가 실행되지 않음'",
    "mcp:local:start": "npm run mcp:dev:background && echo '🚀 로컬 MCP 서버 시작됨 (포트: 3100)'",
    "mcp:local:stop": "taskkill /f /fi \"PID eq $(netstat -ano | findstr :3100 | awk '{print $5}' | head -1)\" 2>nul || echo '✅ MCP 서버 정리됨'",
    "mcp:cursor:setup": "echo '🔧 Cursor에서 cursor.mcp.json 사용 - Cursor 재시작 필요'",
    "mcp:cursor:validate": "node development/scripts/mcp-manager.js validate",
    "mcp:cursor:guide": "node development/scripts/mcp-local-manager.js guide",
    "mcp:help": "node development/scripts/mcp-local-manager.js help",
    "mcp:list": "node development/scripts/mcp-local-manager.js list",
    "mcp:magic:setup": "node development/scripts/mcp-local-manager.js magic",
    "mcp:typescript": "npm run mcp:list && npm run mcp:magic:setup",
    "cursor:mcp": "node development/scripts/mcp-local-manager.js validate && node development/scripts/mcp-local-manager.js guide",
    "cursor:fix": "node development/scripts/mcp-cursor-fix.js",
    "cursor:connect": "node development/scripts/mcp-cursor-connect.js",
    "mcp:start": "node development/scripts/start-mcp-servers.js",
    "mcp:cursor:working-basic": "node development/scripts/mcp-manager.js cursor:working-basic",
    "mcp:cursor:working-filesystem": "node development/scripts/mcp-manager.js cursor:working-filesystem",
    "mcp:cursor:basic:old": "node development/scripts/mcp-manager.js cursor:basic",
    "mcp:cursor:typescript": "node development/scripts/mcp-manager.js cursor:typescript",
    "mcp:cursor:full": "node development/scripts/mcp-manager.js cursor:full",
    "mcp:cursor:status:old": "node development/scripts/mcp-manager.js status",
    "mcp:cursor:test": "node development/scripts/mcp-manager.js test",
    "mcp:cursor:backup": "node development/scripts/mcp-manager.js backup",
    "mcp:remove:everything": "node development/scripts/remove-everything-mcp.js",
    "mcp:health": "node development/scripts/mcp-health-check.js status",
    "mcp:connect": "node development/scripts/mcp-cursor-connect.js",
    "mcp:servers:start": "node development/scripts/start-mcp-servers.js",
    "mcp:restart": "npm run mcp:local:stop; sleep 2; npm run mcp:local:start",
    "mcp:profile": "node development/scripts/mcp-profile-manager.js",
    "mcp:profile:basic": "node development/scripts/mcp-profile-manager.js switch basic",
    "mcp:profile:full-dev": "node development/scripts/mcp-profile-manager.js switch full-dev",
    "mcp:profile:ai-focused": "node development/scripts/mcp-profile-manager.js switch ai-focused",
    "mcp:profile:ai-production": "node development/scripts/mcp-profile-manager.js switch ai-production",
    "mcp:profile:rapid": "node development/scripts/mcp-profile-manager.js switch rapid",
    "mcp:profile:status": "node development/scripts/mcp-profile-manager.js status",
    "mcp:profile:list": "node development/scripts/mcp-profile-manager.js list",
    "mcp:cursor": "node development/scripts/mcp-cursor-profile-manager.js",
    "mcp:cursor:basic": "node development/scripts/mcp-cursor-profile-manager.js cursor:switch basic",
    "mcp:cursor:full-dev": "node development/scripts/mcp-cursor-profile-manager.js cursor:switch full-dev",
    "mcp:cursor:ai-focused": "node development/scripts/mcp-cursor-profile-manager.js cursor:switch ai-focused",
    "mcp:cursor:rapid": "node development/scripts/mcp-cursor-profile-manager.js cursor:switch rapid",
    "mcp:cursor:enhance": "node development/scripts/mcp-cursor-profile-manager.js cursor:enhance",
    "mcp:cursor:status": "node development/scripts/mcp-cursor-profile-manager.js status",
    "mcp:perfect:setup": "node development/scripts/quick-mcp-setup.js",
    "mcp:perfect:setup:win": "powershell -ExecutionPolicy Bypass -File development/scripts/setup-mcp.ps1",
    "mcp:perfect:setup:unix": "bash development/scripts/setup-mcp.sh",
    "mcp:perfect:validate": "npm run mcp:perfect:validate:config && npm run mcp:perfect:validate:servers",
    "mcp:perfect:validate:config": "node -e \"console.log('✅ MCP 설정 파일 검증:', JSON.parse(require('fs').readFileSync('cursor.mcp.json', 'utf8')))\"",
    "mcp:perfect:validate:servers": "npx -y @modelcontextprotocol/server-filesystem --version && npx -y @modelcontextprotocol/server-memory --version",
    "config:sync": "node development/scripts/maintenance/sync-config.js",
    "config:check": "node development/scripts/maintenance/sync-config.js --check",
    "project:health": "node development/scripts/maintenance/project-health-check.js",
    "project:health:quick": "node development/scripts/maintenance/project-health-check.js --no-performance",
    "structure:validate": "npm run config:check && npm run project:health:quick",
    "postinstall": "husky",
    "lighthouse": "lhci autorun",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "test:ui": "vitest --ui"
  },
  "dependencies": {
    "@faker-js/faker": "^9.8.0",
    "@heroicons/react": "^2.2.0",
    "@influxdata/influxdb-client": "^1.35.0",
    "@modelcontextprotocol/sdk": "^1.12.1",
    "@modelcontextprotocol/server-filesystem": "^2025.3.28",
    "@next/bundle-analyzer": "^15.4.0-canary.51",
    "@radix-ui/react-accordion": "^1.2.11",
    "@radix-ui/react-collapsible": "^1.1.11",
    "@radix-ui/react-dialog": "^1.1.14",
    "@radix-ui/react-icons": "^1.3.2",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-popover": "^1.1.14",
    "@radix-ui/react-scroll-area": "^1.2.9",
    "@radix-ui/react-select": "^2.2.5",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-switch": "^1.2.5",
    "@radix-ui/react-tabs": "^1.1.12",
    "@radix-ui/react-toast": "^1.2.14",
    "@radix-ui/react-tooltip": "^1.2.7",
    "@supabase/supabase-js": "^2.49.8",
    "@tailwindcss/line-clamp": "^0.4.4",
    "@tanstack/react-query": "^5.79.0",
    "@tanstack/react-query-devtools": "^5.79.0",
    "@tanstack/react-virtual": "^3.13.9",
    "@tensorflow/tfjs": "^4.22.0",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/ioredis": "^4.28.10",
    "@types/node": "^20.17.50",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "@typescript-eslint/eslint-plugin": "^8.32.1",
    "@typescript-eslint/parser": "^8.32.1",
    "@upstash/redis": "^1.34.3",
    "@use-gesture/react": "^10.3.1",
    "@vercel/kv": "^3.0.0",
    "@xenova/transformers": "^2.17.2",
    "autoprefixer": "^10.4.21",
    "axios": "^1.7.9",
    "chart.js": "^4.4.9",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "compression": "^1.8.0",
    "compromise": "^14.14.4",
    "critters": "^0.0.24",
    "date-fns": "^4.1.0",
    "eslint": "^9",
    "eslint-config-next": "15.1.8",
    "framer-motion": "^12.15.0",
    "fuse.js": "^7.1.0",
    "fuzzyset.js": "^1.0.7",
    "gray-matter": "^4.0.3",
    "ioredis": "^5.6.1",
    "jspdf": "^3.0.1",
    "lucide-react": "^0.511.0",
    "marked": "^15.0.12",
    "natural": "^8.1.0",
    "next": "^15.3.2",
    "node-cron": "^4.0.7",
    "pdf-parse": "^1.1.1",
    "postcss": "^8",
    "prom-client": "^15.1.3",
    "react": "^19.1.0",
    "react-chartjs-2": "^5.3.0",
    "react-dom": "^19.1.0",
    "react-hot-toast": "^2.5.2",
    "react-use-gesture": "^9.1.3",
    "recharts": "^2.15.3",
    "redis": "^5.1.1",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.2",
    "simple-statistics": "^7.8.8",
    "socket.io": "^4.8.1",
    "socket.io-client": "^4.8.1",
    "systeminformation": "^5.27.1",
    "tailwind-merge": "^3.3.0",
    "tailwindcss": "^3.4.1",
    "tailwindcss-animate": "^1.0.7",
    "typescript": "^5",
    "uuid": "^11.0.5",
    "vaul": "^1.1.2",
    "ws": "^8.18.2",
    "zod": "^3.25.46",
    "zustand": "^5.0.5"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  },
  "devDependencies": {
    "@emotion/is-prop-valid": "^1.3.1",
    "@eslint/eslintrc": "^3",
    "@playwright/test": "^1.52.0",
    "@storybook/addon-essentials": "^8.6.14",
    "@storybook/addon-interactions": "^8.6.14",
    "@storybook/addon-links": "^8.6.14",
    "@storybook/nextjs": "^8.6.14",
    "@storybook/react": "^8.6.14",
    "@vitejs/plugin-react": "^4.5.1",
    "@vitest/coverage-v8": "^3.2.2",
    "@vitest/ui": "^3.2.2",
    "cross-env": "^7.0.3",
    "dotenv": "^16.5.0",
    "husky": "^9.1.7",
    "jest-environment-jsdom": "^30.0.0-beta.3",
    "lint-staged": "^16.1.0",
    "playwright": "^1.52.0",
    "prettier": "^3.5.3",
    "rimraf": "^6.0.1",
    "storybook": "^8.6.14",
    "tsx": "^4.19.2",
    "vitest": "^3.2.2"
  },
  "optionalDependencies": {
    "webworker-threads": "^0.7.17"
  }
}
