{
  "name": "openmanager-vibe-v5",
  "version": "5.44.0",
  "description": "üöÄ OpenManager AI v5.21.0 - AI Î∂ÑÏÑùÍ≥º Ïò§ÌÜ†Ïä§ÏºÄÏùºÎßÅ ÏôÑÏ†Ñ Î∂ÑÎ¶¨Î°ú Ï∂îÎ°† ÏïàÏ†ïÏÑ±Í≥º Ïö¥ÏòÅ ÏãúÎÆ¨ Ïú†Ïó∞ÏÑ±ÏùÑ ÎèôÏãúÏóê ÌôïÎ≥¥Ìïú Ï∞®ÏÑ∏ÎåÄ ÏÑúÎ≤Ñ Î™®ÎãàÌÑ∞ÎßÅ ÏãúÏä§ÌÖú. Í≥†Ï†ïÎêú 8Í∞ú AI Î∂ÑÏÑù ÌÉÄÍ≤üÏúºÎ°ú ÏùºÍ¥ÄÎêú Ï∂îÎ°†ÏùÑ Î≥¥Ïû•ÌïòÍ≥†, 8-30ÎåÄ ÎèôÏ†Å ÏÑúÎ≤Ñ ÌíÄÎ°ú ÌòÑÏã§Ï†ÅÏù∏ Ïä§ÏºÄÏùºÎßÅ ÏãúÎÆ¨Î†àÏù¥ÏÖòÏùÑ Ï†úÍ≥µÌï©ÎãàÎã§.",
  "private": true,
  "engines": {
    "node": ">=20.0.0",
    "npm": ">=9.0.0"
  },
  "keywords": [
    "ai-agent",
    "server-monitoring",
    "ai-inference",
    "mcp",
    "nextjs",
    "typescript",
    "optimized"
  ],
  "scripts": {
    "dev": "next dev",
    "dev:clean": "npm run clean:ports && npm run dev",
    "clean:ports": "taskkill /f /im node.exe 2>nul || true",
    "cleanup:servers": "node development/scripts/cleanup-servers.js",
    "restart:dev": "node development/scripts/cleanup-servers.js --start",
    "test:ai-agent": "node development/scripts/test-ai-agent.js",
    "server:status": "node development/scripts/server-manager.js status",
    "server:start:main": "node development/scripts/server-manager.js start main",
    "server:start:mcp": "node development/scripts/server-manager.js start mcp",
    "server:start:test": "node development/scripts/server-manager.js start test",
    "server:restart:main": "node development/scripts/server-manager.js restart main",
    "server:restart:mcp": "node development/scripts/server-manager.js restart mcp",
    "server:restart:test": "node development/scripts/server-manager.js restart test",
    "server:stop:all": "node development/scripts/server-manager.js stop all",
    "server:auto": "node development/scripts/server-manager.js auto",
    "dev:port:3200": "cross-env PORT=3200 next dev",
    "dev:port:3201": "cross-env PORT=3201 next dev",
    "mcp:port:3100": "cd mcp-server && cross-env PORT=3100 npm start",
    "build": "cross-env ESLINT_NO_DEV_ERRORS=true next build",
    "start": "next start",
    "lint": "next lint",
    "lint:fix": "next lint --fix",
    "type-check": "tsc --noEmit",
    "test": "vitest",
    "test:watch": "jest --watch",
    "test:coverage": "vitest --coverage",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:headed": "playwright test --headed",
    "storybook": "storybook dev -p 6006",
    "storybook:dev": "storybook dev -p 6006 --no-open",
    "storybook:docs": "storybook dev -p 6006 --docs",
    "storybook:build": "storybook build",
    "storybook:test": "test-storybook",
    "storybook:generate": "node scripts/storybook-docs-generator.js",
    "storybook:clean": "rm -rf storybook-static",
    "storybook:serve": "npx http-server storybook-static -p 6007",
    "storybook:deploy": "npm run storybook:build && npm run storybook:serve",
    "storybook:a11y": "storybook dev -p 6006 --no-open",
    "storybook:mobile": "storybook dev -p 6006 --no-open",
    "storybook:full": "npm run storybook:generate && npm run storybook:build && npm run storybook:serve",
    "cursor:test": "vitest run --reporter=verbose --bail=1",
    "cursor:test:watch": "vitest --reporter=verbose",
    "cursor:test:unit": "vitest run tests/unit --reporter=verbose",
    "cursor:test:integration": "vitest run tests/integration --reporter=verbose",
    "cursor:test:dev": "vitest run tests/dev-integration --reporter=verbose",
    "cursor:test:all": "npm run cursor:test:unit && npm run cursor:test:integration",
    "cursor:test:quick": "vitest run --reporter=verbose --bail=1 --changed",
    "cursor:lint": "next lint --fix",
    "cursor:type-check": "tsc --noEmit --incremental",
    "cursor:validate": "npm run cursor:type-check && npm run cursor:lint && npm run cursor:test:unit",
    "cursor:storybook": "storybook dev -p 6007 --no-open --quiet",
    "cursor:build": "npm run cursor:validate && npm run build",
    "setup:dev": "node development/scripts/setup-husky.js",
    "db:generate": "drizzle-kit generate",
    "db:migrate": "drizzle-kit migrate",
    "db:studio": "drizzle-kit studio",
    "analyze": "cross-env ANALYZE=true next build",
    "dev:standalone": "next dev -p 3001",
    "dev:integrated": "next dev -p 3001",
    "test:unit": "vitest run --reporter=basic --no-cache --pool=forks",
    "test:unit:coverage": "vitest run --coverage --no-cache",
    "test:redis": "curl -f http://localhost:3000/api/test-redis || echo '‚ùå Redis ÌÖåÏä§Ìä∏ Ïã§Ìå®'",
    "test:redis:dev": "node -e \"require('./src/lib/redis-test.ts').comprehensiveRedisCheck().then(r => console.log(JSON.stringify(r, null, 2)))\"",
    "test:mock-redis": "node scripts/test-mock-redis.js",
    "test:e2e:debug": "playwright test --debug",
    "test:e2e:report": "playwright show-report",
    "test:e2e:install": "playwright install",
    "test:all": "npm run test:unit && npm run test:e2e",
    "test:ci": "playwright test --reporter=html",
    "test:quality": "npm run lint && npm run type-check && npm run test:unit",
    "test:enterprise": "node development/scripts/mockEnterpriseHit.ts",
    "enterprise:seed": "curl -X POST http://localhost:3001/api/enterprise/seed",
    "enterprise:simulate": "curl -X POST http://localhost:3001/api/simulate",
    "health-check": "curl -f http://localhost:3000/api/health || exit 1",
    "health-check:prod": "curl -f https://openmanager-vibe-v5.vercel.app/api/health || exit 1",
    "perf-test": "lighthouse http://localhost:3000 --output=json --output-path=./lighthouse-report.json",
    "audit": "npm audit --audit-level=high",
    "build:clean": "npm run clean && npm run build",
    "build:analyze": "ANALYZE=true npm run build",
    "deploy:preview": "vercel --confirm",
    "deploy:prod": "vercel --prod --confirm",
    "monitor": "npm run health-check:prod && echo '‚úÖ Production health check passed'",
    "init:ai-context": "node development/scripts/init-ai-context.js",
    "test:ai-engine": "node development/scripts/test-ai-engine.js",
    "test:optimized-ai": "node development/scripts/test-optimized-ai.js",
    "ai:optimize": "node development/scripts/test-optimized-ai.js",
    "ai:benchmark": "node development/scripts/test-optimized-ai.js --benchmark-only",
    "ai:test-integrated": "node development/scripts/test-integrated-ai-system.js",
    "ai:integration-test": "npm run ai:test-integrated",
    "ai:setup-test-data": "node development/scripts/setup-test-data.js",
    "system:validate": "npm run ai:setup-test-data && npm run ai:test-integrated && npm run test:optimized-ai",
    "test:comprehensive": "node development/scripts/run-comprehensive-tests.js",
    "test:integration": "vitest tests/integration",
    "test:integration:env": "cross-env NODE_ENV=testing dotenv -e tests/scripts/env-template.env -- vitest tests/integration",
    "test:dev-integration": "vitest tests/dev-integration",
    "test:slack": "cross-env NODE_ENV=testing dotenv -e tests/scripts/env-template.env -- vitest tests/integration/slack-integration.test.ts",
    "test:slack:manual": "cross-env NODE_ENV=testing dotenv -e tests/scripts/env-template.env -- vitest tests/integration/manual-integration-test.test.ts",
    "test:google-ai": "cross-env NODE_ENV=testing dotenv -e tests/scripts/env-template.env -- vitest tests/dev-integration/google-ai-integration.test.ts",
    "test:external": "cross-env NODE_ENV=testing dotenv -e tests/scripts/env-template.env -- vitest tests/integration/manual-integration-test.test.ts tests/dev-integration/google-ai-integration.test.ts tests/integration/slack-integration.test.ts",
    "test:ai-logging": "node scripts/quick-ai-logging-test.mjs",
    "test:ai-chain": "node tests/scripts/test-ai-chain.mjs",
    "test:smart-fallback": "tsx tests/scripts/smart-fallback-test.ts",
    "test:smart-fallback:quick": "tsx tests/scripts/smart-fallback-test.ts --quick",
    "test:smart-fallback:engines": "tsx tests/scripts/smart-fallback-test.ts --engines-only",
    "test:performance": "node development/scripts/run-comprehensive-tests.js --skip-integration",
    "generate:metrics": "tsx development/scripts/analysis/generate-daily-metrics.ts",
    "generate:metrics:clear": "tsx development/scripts/analysis/generate-daily-metrics.ts --clear",
    "db:setup": "echo 'Run the SQL file: sql/create-daily-metrics-table.sql in your Supabase dashboard'",
    "metrics:help": "echo 'Usage: npm run generate:metrics (add data) | npm run generate:metrics:clear (reset & add)'",
    "test:interpolation": "tsx development/scripts/test-interpolation.ts",
    "test:interpolation:basic": "tsx development/scripts/test-interpolation.ts --basic",
    "test:interpolation:bridge": "tsx development/scripts/test-interpolation.ts --bridge",
    "test:interpolation:performance": "tsx development/scripts/test-interpolation.ts --performance",
    "test:warmup": "node development/scripts/test-ai-warmup-system.js",
    "test:warmup:sh": "bash development/scripts/test-warmup.sh",
    "test:rate-limit": "node development/scripts/test-rate-limiting.js",
    "load-test": "node development/scripts/load-test.js",
    "load-test:verbose": "DEBUG=* node development/scripts/load-test.js",
    "perf:optimize": "npm run build:analyze && npm run perf:vitals",
    "perf:vitals": "lighthouse http://localhost:3000 --chrome-flags='--headless' --output=html --output-path=./reports/lighthouse.html",
    "perf:bundle": "ANALYZE=true npm run build",
    "perf:preload": "echo 'üöÄ Preload testing - check console for metrics'",
    "perf:monitor": "npm run build && npm run start && npm run perf:vitals",
    "ci:recovery": "bash development/scripts/ci-recovery.sh",
    "ci:trigger": "git commit --allow-empty -m 'üîÑ CI Ïû¨Ìä∏Î¶¨Í±∞' && git push origin main",
    "ci:status": "echo 'üîó GitHub Actions: https://github.com/$(git config --get remote.origin.url | sed \"s/.*github.com[:/]\\([^.]*\\).*/\\1/\")/actions'",
    "ci:health": "npm run health-check:prod && npm run lint && npm run type-check",
    "deploy:safe": "npm run validate:all && echo '‚úÖ Í≤ÄÏ¶ù ÌÜµÍ≥º - Î∞∞Ìè¨ ÏßÑÌñâ' && git push origin main",
    "emergency:rollback": "echo 'üö® Emergency rollback - contact administrator'",
    "verify:production": "npm run health-check:prod && echo '‚úÖ Production verification passed'",
    "deploy": "echo 'üöÄ GitHub ActionsÏóêÏÑú ÏûêÎèô Î∞∞Ìè¨Í∞Ä ÏßÑÌñâÎê©ÎãàÎã§. Vercel ÎåÄÏãúÎ≥¥ÎìúÎ•º ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî.'",
    "deploy:dev": "vercel",
    "deploy:skip-ci": "echo '‚ö†Ô∏è GitHub ActionsÎ•º ÏÇ¨Ïö©Ìï¥Ï£ºÏÑ∏Ïöî: git push origin main'",
    "deploy:local": "npm run build && echo 'üèóÔ∏è Î°úÏª¨ ÎπåÎìú ÏôÑÎ£å. GitHub ActionsÎ°ú Î∞∞Ìè¨ÌïòÏÑ∏Ïöî.'",
    "deploy:quick": "git add -A && git commit -m 'üöÄ Îπ†Î•∏ Î∞∞Ìè¨' && git push origin main",
    "deploy:github": "git push origin main && echo 'üöÄ GitHub Actions Î∞∞Ìè¨ Ìä∏Î¶¨Í±∞Îê®'",
    "deploy:v5.21.0": "node development/scripts/deploy-v5.21.0.mjs",
    "deploy:bash": "bash development/scripts/deploy-v5.21.0.sh",
    "prepare": "husky",
    "pre-commit": "lint-staged",
    "pre-push": "npm run validate:all",
    "validate:all": "npm run type-check && npm run lint && npm run test:unit && npm run build",
    "validate:quick": "npm run type-check && npm run lint",
    "consolidate": "node development/scripts/consolidate-project.js",
    "consolidate:report": "node development/scripts/consolidate-project.js && cat CONSOLIDATION_REPORT.md",
    "mcp:setup": "node development/scripts/mcp/setup-mcp.js",
    "mcp:install": "npm install -g @modelcontextprotocol/server-filesystem",
    "mcp:full-setup": "npm run mcp:install && npm run mcp:setup",
    "mcp:test": "node development/scripts/mcp/test-mcp-connection.js",
    "mcp:status": "node development/scripts/mcp/mcp-health-check.js status",
    "mcp:start": "node development/scripts/mcp/start-mcp-servers.js",
    "mcp:manage": "node development/scripts/mcp/mcp-manager.js",
    "render:ai:setup": "cp mcp-render-ai.json cursor.mcp.json && echo 'ü§ñ AI ÏóîÏßÑ ÏÑ§Ï†ï Ï†ÅÏö© ÏôÑÎ£å'",
    "render:build": "export NODE_ENV=production && export RENDER=true && npm ci && npm install @modelcontextprotocol/server-filesystem @smithery/cli canvas && npm run build",
    "render:start": "export NODE_ENV=production && export RENDER=true && npm start",
    "project:analyze": "node development/scripts/consolidate-project.js --analyze-only",
    "project:cleanup": "node development/scripts/consolidate-project.js --cleanup-only",
    "project:optimize": "npm run project:cleanup && npm run consolidate && npm run test:quality",
    "deploy-check": "npm run test:ci && echo '‚úÖ Î∞∞Ìè¨ Ï§ÄÎπÑ ÏôÑÎ£å'",
    "preview": "npm run build && npm run start",
    "clean": "rm -rf .next && rm -rf node_modules && npm install",
    "config:sync": "node development/scripts/maintenance/sync-config.js",
    "config:check": "node development/scripts/maintenance/sync-config.js --check",
    "project:health": "node development/scripts/maintenance/project-health-check.js",
    "project:health:quick": "node development/scripts/maintenance/project-health-check.js --no-performance",
    "structure:validate": "npm run config:check && npm run project:health:quick",
    "postinstall:dev": "playwright install",
    "lighthouse": "lhci autorun",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "test:ui": "vitest --ui",
    "docs:validate": "node scripts/docs-management.mjs validate",
    "docs:cleanup": "node scripts/docs-management.mjs cleanup",
    "docs:backup": "node scripts/docs-management.mjs backup",
    "docs:index": "node scripts/docs-management.mjs index",
    "workflow:dev": "node scripts/dev-workflow.mjs dev",
    "workflow:test": "node scripts/dev-workflow.mjs test:local",
    "deploy:render": "node scripts/dev-workflow.mjs deploy:render",
    "deploy:vercel": "node scripts/dev-workflow.mjs deploy:vercel",
    "test:production": "node scripts/dev-workflow.mjs test:production",
    "dev:full": "node scripts/dev-workflow.mjs development",
    "check-services": "node scripts/check-services.js",
    "dev:monitor": "npm run check-services && npm run dev",
    "services:status": "node scripts/check-services.js",
    "dev:keys": "node scripts/dev-key-manager.js",
    "dev:keys:status": "node scripts/dev-key-manager.js status",
    "dev:keys:setup": "node scripts/dev-key-manager.js setup",
    "dev:keys:generate": "node scripts/dev-key-manager.js generate",
    "dev:keys:report": "node scripts/dev-key-manager.js report",
    "dev:setup-keys": "npm run dev:keys:setup && npm run check-services",
    "docs:update": "node scripts/update-docs.mjs",
    "docs:setup-hooks": "node scripts/setup-git-hooks.mjs",
    "docs:auto": "npm run docs:update && npm run docs:setup-hooks"
  },
  "dependencies": {
    "@faker-js/faker": "^9.8.0",
    "@google/generative-ai": "^0.16.0",
    "@heroicons/react": "^2.2.0",
    "@hookform/resolvers": "^3.9.0",
    "@influxdata/influxdb-client": "^1.35.0",
    "@modelcontextprotocol/sdk": "^1.12.1",
    "@modelcontextprotocol/server-filesystem": "^2025.3.28",
    "@next/bundle-analyzer": "^15.4.0-canary.51",
    "@radix-ui/react-accordion": "^1.2.11",
    "@radix-ui/react-collapsible": "^1.1.11",
    "@radix-ui/react-dialog": "^1.1.14",
    "@radix-ui/react-icons": "^1.3.2",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-popover": "^1.1.14",
    "@radix-ui/react-scroll-area": "^1.2.9",
    "@radix-ui/react-select": "^2.2.5",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-switch": "^1.2.5",
    "@radix-ui/react-tabs": "^1.1.12",
    "@radix-ui/react-toast": "^1.2.14",
    "@radix-ui/react-tooltip": "^1.2.7",
    "@supabase/ssr": "^0.6.1",
    "@supabase/supabase-js": "^2.50.0",
    "@tailwindcss/line-clamp": "^0.4.4",
    "@tailwindcss/typography": "^0.5.10",
    "@tanstack/react-query": "^5.79.0",
    "@tanstack/react-query-devtools": "^5.79.0",
    "@tanstack/react-virtual": "^3.13.9",
    "@testing-library/user-event": "^14.6.1",
    "@types/crypto-js": "^4.2.2",
    "@types/ioredis": "^4.28.10",
    "@types/jsonwebtoken": "^9.0.9",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "@typescript-eslint/eslint-plugin": "^8.32.1",
    "@typescript-eslint/parser": "^8.32.1",
    "@upstash/redis": "^1.34.3",
    "@use-gesture/react": "^10.3.1",
    "@vercel/kv": "^3.0.0",
    "@xenova/transformers": "^2.17.2",
    "autoprefixer": "^10.4.21",
    "axios": "^1.7.9",
    "chalk": "^5.4.1",
    "chart.js": "^4.4.9",
    "class-variance-authority": "^0.7.0",
    "clsx": "^2.1.1",
    "compression": "^1.8.0",
    "compromise": "^14.14.4",
    "critters": "^0.0.24",
    "crypto-js": "^4.2.0",
    "date-fns": "^4.1.0",
    "eslint": "^9",
    "eslint-config-next": "15.1.8",
    "framer-motion": "^12.15.0",
    "fuse.js": "^7.1.0",
    "fuzzyset.js": "^1.0.7",
    "gray-matter": "^4.0.3",
    "ioredis": "^5.6.1",
    "jsonwebtoken": "^9.0.2",
    "jspdf": "^3.0.1",
    "lodash": "^4.17.21",
    "lucide-react": "^0.511.0",
    "marked": "^15.0.12",
    "ml-kmeans": "^3.1.0",
    "ml-pca": "^4.1.1",
    "ml-regression": "^6.0.0",
    "ml-regression-polynomial": "^3.0.2",
    "ml-regression-simple-linear": "^3.0.1",
    "natural": "^8.1.0",
    "next": "^15.3.2",
    "node-cron": "^4.0.7",
    "openai": "^5.6.0",
    "pdf-parse": "^1.1.1",
    "pino": "^9.7.0",
    "pino-pretty": "^13.0.0",
    "postcss": "^8",
    "prom-client": "^15.1.3",
    "react": "^19.1.0",
    "react-chartjs-2": "^5.3.0",
    "react-dom": "^19.1.0",
    "react-hot-toast": "^2.5.2",
    "react-markdown": "^10.1.0",
    "react-use-gesture": "^9.1.3",
    "recharts": "^2.15.3",
    "redis": "^5.1.1",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.2",
    "simple-statistics": "^7.8.3",
    "socket.io": "^4.8.1",
    "socket.io-client": "^4.8.1",
    "swr": "^2.3.3",
    "systeminformation": "^5.27.1",
    "tailwind-merge": "^3.3.0",
    "tailwindcss": "^3.4.1",
    "tailwindcss-animate": "^1.0.7",
    "uuid": "^11.0.5",
    "vaul": "^1.1.2",
    "winston": "^3.17.0",
    "winston-daily-rotate-file": "^5.0.0",
    "ws": "^8.18.2",
    "zod": "^3.25.46",
    "zustand": "^5.0.5"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  },
  "devDependencies": {
    "@emotion/is-prop-valid": "^1.3.1",
    "@eslint/eslintrc": "^3",
    "@next/eslint-plugin-next": "^15.3.4",
    "@playwright/test": "^1.52.0",
    "@storybook/addon-a11y": "^9.0.12",
    "@storybook/addon-docs": "^9.0.12",
    "@storybook/addon-links": "^9.0.12",
    "@storybook/nextjs": "^9.0.12",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@types/node": "^24.0.1",
    "@types/node-fetch": "^2.6.12",
    "@types/winston": "^2.4.4",
    "@vitejs/plugin-react": "^4.5.2",
    "@vitest/coverage-v8": "^3.2.2",
    "@vitest/ui": "^3.2.2",
    "cross-env": "^7.0.3",
    "dotenv": "^16.5.0",
    "eslint-plugin-storybook": "9.0.12",
    "glob": "^11.0.3",
    "husky": "^9.1.7",
    "jest-environment-jsdom": "^30.0.0-beta.3",
    "jsdom": "^26.1.0",
    "lint-staged": "^16.1.0",
    "node-fetch": "^3.3.2",
    "playwright": "^1.52.0",
    "prettier": "^3.5.3",
    "rimraf": "^6.0.1",
    "storybook": "^9.0.12",
    "tsx": "^4.19.2",
    "typescript": "^5.8.3",
    "vitest": "^3.2.3",
    "webpack": "^5.99.9"
  },
  "optionalDependencies": {
    "webworker-threads": "^0.7.17"
  },
  "packageManager": "pnpm@10.12.1+sha512.f0dda8580f0ee9481c5c79a1d927b9164f2c478e90992ad268bbb2465a736984391d6333d2c327913578b2804af33474ca554ba29c04a8b13060a717675ae3ac"
}