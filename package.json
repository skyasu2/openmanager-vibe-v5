{
  "name": "openmanager-vibe-v5",
  "version": "5.46.40",
  "description": "🚀 OpenManager Vibe v5 - 무료티어 최적화로 월 사용량 90% 절약하는 실시간 서버 관리 플랫폼. Docker 제거, Vitest 기반 TDD, Google AI 연동으로 차세대 서버 모니터링 시스템을 제공합니다.",
  "private": true,
  "type": "module",
  "engines": {
    "node": ">=22.0.0",
    "npm": ">=10.0.0"
  },
  "keywords": [
    "server-monitoring",
    "google-ai",
    "free-tier-optimized",
    "vitest",
    "nextjs",
    "typescript",
    "redis",
    "supabase"
  ],
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint",
    "type-check": "tsc --noEmit",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "test": "vitest run",
    "test:quick": "vitest run tests/unit/api --reporter=basic",
    "test:watch": "vitest",
    "test:ui": "vitest --ui",
    "test:coverage": "vitest --coverage",
    "test:unit": "vitest run tests/unit",
    "test:integration": "vitest run tests/integration",
    "test:tdd-safe": "vitest run --reporter=basic --exclude='**/refactoring/**'",
    "test:e2e": "node node_modules/@playwright/test/cli.js test",
    "test:e2e:ui": "node node_modules/@playwright/test/cli.js test --ui",
    "test:e2e:debug": "node node_modules/@playwright/test/cli.js test --debug",
    "test:e2e:headed": "node node_modules/@playwright/test/cli.js test --headed",
    "test:e2e:report": "node node_modules/@playwright/test/cli.js show-report",
    "redis:test": "node scripts/redis-simple-test.js",
    "redis:cli": "node scripts/redis-direct-cli.js",
    "analyze": "npm run analyze:free-tier && npm run analyze:bundle",
    "analyze:free-tier": "node scripts/analyze-free-tier.js",
    "analyze:bundle": "cross-env ANALYZE=true next build",
    "analyze:usage": "node scripts/analyze-usage.js",
    "analyze:performance": "node scripts/analyze-performance.js",
    "cursor:validate": "npm run type-check && npm run lint && npm run test:tdd-safe",
    "validate:competition": "npm run type-check && npm run lint && npm run test",
    "validate:all": "npm run cursor:validate && npm run analyze:free-tier",
    "env:check": "node scripts/verify-env.cjs",
    "env:setup": "./scripts/setup-env-interactive.sh",
    "env:verify": "node scripts/verify-env.cjs",
    "env:guide": "cat setup-env-guide.md",
    "env:vercel": "./scripts/setup-vercel-env.sh",
    "prepare": "husky",
    "pre-commit": "npm run type-check && npm run lint",
    "pre-push": "npm run type-check && npm run lint && npm run test:tdd-safe",
    "husky:disable": "node scripts/husky-helper.js disable",
    "husky:enable": "node scripts/husky-helper.js enable",
    "husky:status": "node scripts/husky-helper.js status",
    "deploy": "vercel --prod",
    "deploy:preview": "vercel",
    "clean": "rm -rf .next node_modules/.cache coverage",
    "clean:install": "rm -rf node_modules package-lock.json && npm install",
    "security:audit": "npm audit --audit-level=high",
    "security:check": "npm audit --audit-level=moderate",
    "health:check": "curl -f http://localhost:3000/api/health || exit 1",
    "health:test": "node scripts/health-test.js",
    "oauth:diagnose": "node scripts/diagnose-oauth-issue.js",
    "oauth:fix": "./scripts/quick-fix-oauth.sh",
    "time:kst": "node -e \"console.log('🕒 한국시간:', new Date().toLocaleString('ko-KR', {timeZone: 'Asia/Seoul'}) + ' (KST)')\"",
    "time:commit": "node -e \"console.log('커밋시간:', '(' + new Date().toLocaleString('sv-SE', {timeZone: 'Asia/Seoul'}).substring(0, 16) + ' KST)')\"",
    "gcp:monitor": "node scripts/gcp-quota-monitor.js monitor",
    "gcp:optimize": "node scripts/gcp-quota-monitor.js optimize",
    "gcp:check": "node scripts/gcp-quota-monitor.js check",
    "gcp:alert": "node scripts/gcp-quota-alert.js",
    "gcp:console": "node scripts/gcp-console-helper.js",
    "gcp:quota-report": "node scripts/gcp-quota-report.js",
    "git:push": "powershell -ExecutionPolicy Bypass -File scripts/git-push-helper.ps1",
    "git:secure-push": "node scripts/github-auth-helper.cjs push",
    "gemini:guide": "echo '🚀 Gemini CLI 사용법 (권장):' && echo '' && echo '📋 기본 사용법:' && echo '  gemini -p \"프롬프트\"' && echo '' && echo '📊 파이프라인 활용:' && echo '  echo \"질문\" | gemini -p \"3줄 답변\"' && echo '  cat 파일.ts | gemini -p \"코드 리뷰\"' && echo '  git diff | gemini -p \"변경사항 검토\"' && echo '' && echo '📈 사용량 관리:' && echo '  gemini /stats      # 사용량 확인' && echo '  gemini /compress   # 대화 압축' && echo '  gemini /clear      # 컨텍스트 초기화' && echo '' && echo '💡 일일 1,000회 제한이므로 효율적으로 사용하세요!'",
    "usage": "echo '🎯 Claude Code 사용량 모니터링' && echo '━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━' && echo '💡 명령어:' && echo '  npx ccusage@latest blocks --live    # 실시간 대시보드' && echo '  npx ccusage@latest blocks --active  # 현재 과금 블록' && echo '  npx ccusage@latest daily           # 일별 사용량' && echo '  npx ccusage@latest session         # 현재 세션' && echo '━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━'",
    "gemini:setup": "powershell -Command \"Write-Host '🔧 Gemini 헬퍼 설정 중...' -ForegroundColor Cyan; . .\\scripts\\gemini-helpers.ps1; Write-Host '✅ 사용 가능: gc, gd, gf, ge, gs' -ForegroundColor Green\"",
    "gemini:review": "git diff | gemini -p \"코드 리뷰: 1) 잠재적 버그 2) 성능 이슈 3) 개선점\"",
    "gemini:stats": "gemini /stats",
    "gemini:test-mcp": "node scripts/test-mcp-gemini.js",
    "system:health": "bash scripts/system-health-check.sh",
    "system:health:watch": "watch -n 30 'npm run system:health'",
    "system:status": "npm run system:health && echo '' && npm run gcp:check && echo '' && npm run redis:test",
    "gemini:collab": "echo '🤝 Claude-Gemini 협업 가이드' && echo '1. \"이 코드 Gemini랑 리뷰해줘\"' && echo '2. \"이 에러 Gemini랑 분석해줘\"' && echo '3. \"이 설계 Gemini랑 검증해줘\"'",
    "gemini:migrate-v3": "powershell -ExecutionPolicy Bypass -File scripts/migrate-gemini-bridge-v3.ps1",
    "gemini:test-v3": "node scripts/test-gemini-v3.js",
    "gemini:dev": "node tools/gemini-dev-tools.js",
    "gemini:chat": "node tools/gemini-dev-tools.js chat",
    "gemini:analyze": "node tools/gemini-dev-tools.js analyze",
    "gemini:diff": "node tools/gemini-dev-tools.js diff",
    "gemini:health": "node tools/gemini-dev-tools.js health",
    "gemini:version": "node tools/gemini-dev-tools.js version",
    "tavily:test": "node scripts/test-tavily-setup.cjs",
    "ccusage:live": "npx ccusage@latest blocks --live",
    "ccusage:blocks": "npx ccusage@latest blocks --active",
    "ccusage:daily": "npx ccusage@latest daily",
    "mcp:check": "powershell -ExecutionPolicy Bypass -File scripts/check-mcp-status.ps1",
    "mcp:fix": "powershell -ExecutionPolicy Bypass -File scripts/fix-global-mcp.ps1",
    "mcp:test-tavily": "node scripts/test-tavily-mcp.mjs",
    "mcp:unified": "powershell -ExecutionPolicy Bypass -File scripts/setup-mcp-unified.ps1",
    "mcp:fix-paths": "powershell -ExecutionPolicy Bypass -File scripts/fix-mcp-paths.ps1",
    "ai:smart": "tsx tools/smart-gemini-wrapper.ts",
    "ai:orchestrator": "tsx tools/ai-orchestrator.ts",
    "ai:dashboard": "tsx tools/ai-usage-dashboard.ts",
    "ai:analyze": "tsx tools/ai-orchestrator.ts analyze",
    "ai:quick": "tsx tools/ai-orchestrator.ts quick",
    "ai:usage": "tsx tools/ai-usage-dashboard.ts show",
    "ai:live": "tsx tools/ai-usage-dashboard.ts live",
    "ai:setup": "bash tools/wsl-ai-wrapper.sh setup",
    "ai:help": "bash tools/wsl-ai-wrapper.sh",
    "env:setup-windows": "powershell -ExecutionPolicy Bypass -File scripts/setup-env-windows.ps1",
    "mcp:complete": "powershell -ExecutionPolicy Bypass -File scripts/setup-mcp-complete.ps1",
    "mcp:setup": "powershell -ExecutionPolicy Bypass -File scripts/setup-mcp-servers.ps1",
    "mcp:reset": "powershell -ExecutionPolicy Bypass -File scripts/reset-mcp-settings.ps1",
    "mcp:verify": "node scripts/verify-mcp-servers.cjs",
    "mcp:verify:playwright": "echo '🎭 Playwright MCP 서버 검증...' && npx playwright --version && echo '✅ Playwright 설치 확인' && npm run mcp:verify | grep playwright",
    "mcp:list": "claude mcp list",
    "mcp:test": "node scripts/test-mcp-direct.js",
    "check:file-length": "echo '📏 파일 길이 검사...' && npx eslint 'src/**/*.{ts,tsx}' --rule 'max-lines: [error, 800]' --no-eslintrc",
    "check:large-files": "echo '📊 800줄 이상 파일 목록:' && find src -name '*.ts' -o -name '*.tsx' | xargs wc -l | sort -rn | awk '$1 > 800 {print $1 \" \" $2}'",
    "secure:token": "tsx scripts/manage-secure-tokens.ts",
    "secure:add": "tsx scripts/manage-secure-tokens.ts add",
    "secure:get": "tsx scripts/manage-secure-tokens.ts get",
    "secure:list": "tsx scripts/manage-secure-tokens.ts list",
    "secure:mcp-update": "tsx scripts/manage-secure-tokens.ts mcp-update",
    "mcp:secure-load": "tsx scripts/mcp-secure-loader.ts",
    "decrypt:keys": "tsx scripts/decrypt-api-keys.ts",
    "decrypt:keys:export": "tsx scripts/decrypt-api-keys.ts --export",
    "decrypt:mcp-update": "tsx scripts/decrypt-api-keys.ts --mcp-update",
    "env:auto-setup": "tsx scripts/auto-env-manager.ts auto-setup",
    "env:backup": "tsx scripts/auto-env-manager.ts backup",
    "env:rotate": "tsx scripts/auto-env-manager.ts rotate",
    "env:github-workflow": "tsx scripts/auto-env-manager.ts github-workflow",
    "env:docker-compose": "tsx scripts/auto-env-manager.ts docker-compose",
    "storybook": "storybook dev -p 6006",
    "build-storybook": "storybook build",
    "storybook:test": "test-storybook"
  },
  "dependencies": {
    "@emotion/react": "^11.14.0",
    "@emotion/styled": "^11.14.1",
    "@google/generative-ai": "^0.16.0",
    "@heroicons/react": "^2.2.0",
    "@modelcontextprotocol/server-filesystem": "^2025.7.1",
    "@modelcontextprotocol/server-github": "^2025.4.8",
    "@modelcontextprotocol/server-memory": "^2025.4.25",
    "@next/bundle-analyzer": "^14.2.4",
    "@radix-ui/react-accordion": "^1.2.11",
    "@radix-ui/react-collapsible": "^1.1.11",
    "@radix-ui/react-dialog": "^1.1.14",
    "@radix-ui/react-icons": "^1.3.2",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-popover": "^1.1.14",
    "@radix-ui/react-scroll-area": "^1.2.9",
    "@radix-ui/react-select": "^2.2.5",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-switch": "^1.2.5",
    "@radix-ui/react-tabs": "^1.1.12",
    "@radix-ui/react-toast": "^1.2.14",
    "@radix-ui/react-tooltip": "^1.2.7",
    "@supabase/auth-helpers-nextjs": "^0.10.0",
    "@supabase/mcp-server-supabase": "^0.4.5",
    "@supabase/ssr": "^0.6.1",
    "@supabase/supabase-js": "^2.50.0",
    "@tailwindcss/typography": "^0.5.10",
    "@tanstack/react-query": "^5.79.0",
    "@tanstack/react-query-devtools": "^5.79.0",
    "@types/socket.io": "^3.0.1",
    "@upstash/redis": "^1.35.1",
    "@use-gesture/react": "^10.3.1",
    "@xenova/transformers": "^2.17.2",
    "ajv": "^8.17.1",
    "ajv-keywords": "^5.1.0",
    "autoprefixer": "^10.4.21",
    "axios": "^1.7.9",
    "chart.js": "^4.4.9",
    "class-variance-authority": "^0.7.0",
    "clsx": "^2.1.1",
    "critters": "^0.0.23",
    "crypto-js": "^4.2.0",
    "date-fns": "^4.1.0",
    "dotenv": "^17.0.1",
    "framer-motion": "^12.15.0",
    "gray-matter": "^4.0.3",
    "ioredis": "^5.6.1",
    "lodash": "^4.17.21",
    "lucide-react": "^0.511.0",
    "ml-kmeans": "^6.0.0",
    "ml-pca": "^4.1.1",
    "ml-regression-simple-linear": "^3.0.1",
    "next": "^14.2.4",
    "next-auth": "^4.24.11",
    "pino": "^9.7.0",
    "playwright": "1.53.0",
    "postcss": "^8",
    "react": "^18.2.0",
    "react-chartjs-2": "^5.3.0",
    "react-dom": "^18.2.0",
    "react-hot-toast": "^2.5.2",
    "react-markdown": "^10.1.0",
    "recharts": "^3.0.2",
    "rxjs": "^7.8.2",
    "simple-statistics": "^7.8.8",
    "socket.io": "^4.8.1",
    "socket.io-client": "^4.8.1",
    "swr": "^2.3.3",
    "tailwind-merge": "^3.3.0",
    "tailwindcss": "^3.4.1",
    "tailwindcss-animate": "^1.0.7",
    "tavily-mcp": "^0.2.8",
    "uuid": "^11.0.5",
    "vaul": "^1.1.2",
    "winston": "^3.17.0",
    "zod": "^3.25.46",
    "zustand": "^5.0.5"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.3.1",
    "@eslint/js": "^9.30.1",
    "@faker-js/faker": "^9.8.0",
    "@next/eslint-plugin-next": "^14.2.4",
    "@playwright/mcp": "^0.0.29",
    "@playwright/test": "^1.53.2",
    "@storybook/addon-docs": "^9.0.16",
    "@storybook/addon-onboarding": "^9.0.16",
    "@storybook/nextjs": "^9.0.16",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^15.0.7",
    "@testing-library/user-event": "^14.6.1",
    "@types/crypto-js": "^4.2.2",
    "@types/lodash": "^4.17.13",
    "@types/node": "^22.0.0",
    "@types/react": "^18.2.43",
    "@types/react-dom": "^18.2.17",
    "@types/uuid": "^10.0.0",
    "@typescript-eslint/eslint-plugin": "^8.32.1",
    "@typescript-eslint/parser": "^8.32.1",
    "@vitejs/plugin-react": "^4.3.4",
    "@vitest/coverage-v8": "^2.1.8",
    "@vitest/ui": "^2.1.8",
    "chalk": "^5.4.1",
    "commander": "^14.0.0",
    "cross-env": "^7.0.3",
    "eslint": "^8.57.1",
    "eslint-config-next": "^14.2.30",
    "eslint-plugin-storybook": "^9.0.16",
    "glob": "^11.0.3",
    "husky": "^9.1.6",
    "ignore-loader": "^0.1.2",
    "jsdom": "^25.0.1",
    "lint-staged": "^15.2.10",
    "prettier": "^3.4.2",
    "storybook": "^9.0.16",
    "tsx": "^4.20.3",
    "typescript": "^5.7.2",
    "vite": "^6.0.7",
    "vitest": "^2.1.8"
  },
  "lint-staged": {
    "src/**/*.{js,jsx,ts,tsx}": [
      "eslint --fix"
    ],
    "components/**/*.{js,jsx,ts,tsx}": [
      "eslint --fix"
    ],
    "tests/**/*.{js,jsx,ts,tsx}": [
      "eslint --fix"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "overrides": {
    "@types/react": "^18.2.43",
    "@types/react-dom": "^18.2.17"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/your-username/openmanager-vibe-v5.git"
  },
  "bugs": {
    "url": "https://github.com/your-username/openmanager-vibe-v5/issues"
  },
  "homepage": "https://github.com/your-username/openmanager-vibe-v5#readme"
}
