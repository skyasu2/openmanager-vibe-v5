{
  "name": "openmanager-vibe-v5",
  "version": "5.66.4",
  "private": true,
  "scripts": {
    "dev": "cross-env NODE_OPTIONS='--max-old-space-size=8192' next dev",
    "dev:turbo": "cross-env NODE_OPTIONS='--max-old-space-size=8192' next dev --turbo",
    "dev:verbose": "cross-env DEBUG=* next dev",
    "build": "cross-env NODE_OPTIONS='--max-old-space-size=4096' next build",
    "build:analyze": "cross-env ANALYZE=true next build",
    "build:trace": "cross-env NEXT_TELEMETRY_DEBUG=1 next build",
    "build:memory": "cross-env NODE_OPTIONS='--max-old-space-size=8192 --trace-gc' next build",
    "start": "next start",
    "start:prod": "cross-env NODE_ENV=production next start",
    "lint": "next lint",
    "lint:fix": "next lint --fix",
    "lint:strict": "next lint --max-warnings=0",
    "format": "prettier --write \"src/**/*.{js,jsx,ts,tsx,json,css,scss,md}\"",
    "format:check": "prettier --check \"src/**/*.{js,jsx,ts,tsx,json,css,scss,md}\"",
    "test": "cross-env USE_REAL_REDIS=false vitest",
    "test:watch": "cross-env USE_REAL_REDIS=false vitest --watch",
    "test:coverage": "cross-env USE_REAL_REDIS=false vitest --coverage",
    "test:ui": "cross-env USE_REAL_REDIS=false vitest --ui",
    "test:unit": "cross-env USE_REAL_REDIS=false vitest run src/test/*.test.ts --pool=threads --poolOptions.threads.singleThread=false --test-timeout=5000",
    "test:quick": "cross-env USE_REAL_REDIS=false vitest run src/test/*.test.ts --exclude='**/performance-*.test.ts' --exclude='**/*.e2e.test.ts' --exclude='**/IncidentReportService-*.test.ts' --pool=forks --poolOptions.forks.singleFork=false --test-timeout=2000",
    "test:pre-push": "cross-env USE_REAL_REDIS=false vitest run src/test/env.test.ts src/test/simplified-ai.test.ts src/test/ai-engine.test.ts --reporter=basic --no-coverage --bail=1 --pool=forks --test-timeout=1000",
    "test:integration": "cross-env USE_REAL_REDIS=false vitest run src/test/integration/*.test.ts",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:all": "npm run test:unit && npm run test:integration && npm run test:e2e",
    "type-check": "tsc --noEmit",
    "test:core": "vitest run src/test/*.test.ts --reporter=verbose",
    "test:auth": "vitest run src/test/auth-flow.e2e.test.ts --reporter=verbose",
    "test:auth:watch": "vitest src/test/auth-flow.e2e.test.ts --reporter=verbose",
    "test:storage": "vitest run src/test/mock-storage.test.ts --reporter=verbose",
    "test:ai": "vitest run src/test/unified-ai-engine.test.ts --reporter=verbose",
    "test:cache": "vitest run src/test/redis-cache.test.ts --reporter=verbose",
    "test:tdd": "vitest src/test/*.test.ts --reporter=verbose",
    "test:tdd-safe": "USE_REAL_REDIS=false vitest run src/test/*.test.ts --reporter=verbose",
    "test:debug": "node --inspect-brk ./node_modules/.bin/vitest run",
    "test:core:minimal": "vitest run src/test/minimal.test.ts --reporter=verbose",
    "test:simple": "node scripts/simple-test-runner.js",
    "test:performance": "vitest run src/test/performance-optimized-query-engine.e2e.test.ts src/test/performance-api.test.ts src/test/circuit-breaker.test.ts --reporter=verbose",
    "test:performance:watch": "vitest src/test/performance-optimized-query-engine.e2e.test.ts src/test/performance-api.test.ts src/test/circuit-breaker.test.ts",
    "test:e2e:performance": "playwright test src/test/performance-optimized-query-engine.playwright.test.ts",
    "test:e2e:performance:ui": "playwright test src/test/performance-optimized-query-engine.playwright.test.ts --ui",
    "redis:test": "node scripts/redis-simple-test.js",
    "redis:cli": "node scripts/redis-direct-cli.js",
    "redis:check": "tsx scripts/test-redis-connection.ts",
    "redis:check:mock": "cross-env USE_REAL_REDIS=false tsx scripts/test-redis-connection.ts",
    "redis:check:real": "USE_REAL_REDIS=true tsx scripts/test-redis-connection.ts",
    "analyze": "npm run analyze:free-tier && npm run analyze:bundle",
    "analyze:free-tier": "node scripts/analyze-free-tier.js",
    "analyze:bundle": "cross-env ANALYZE=true next build",
    "analyze:usage": "node scripts/analyze-usage.js",
    "analyze:performance": "node scripts/analyze-performance.js",
    "cursor:validate": "npm run type-check && npm run lint && npm run test:tdd-safe",
    "validate:competition": "npm run type-check && npm run lint && npm run test",
    "validate:all": "npm run cursor:validate && npm run analyze:free-tier",
    "env:check": "node scripts/verify-env.cjs",
    "env:setup": "./scripts/setup-env-interactive.sh",
    "env:guide": "cat setup-env-guide.md",
    "env:vercel": "./scripts/setup-vercel-env.sh",
    "env:backup": "node scripts/simple-env-backup.cjs backup",
    "env:restore": "node scripts/simple-env-backup.cjs restore",
    "env:help": "node scripts/simple-env-backup.cjs help",
    "prepare": "husky",
    "pre-commit": "npm run type-check && npm run lint && npm run security:secrets",
    "pre-push": "npm run type-check && npm run lint && npm run test:tdd-safe",
    "husky:disable": "node scripts/husky-helper.js disable",
    "husky:enable": "node scripts/husky-helper.js enable",
    "husky:status": "node scripts/husky-helper.js status",
    "deploy": "vercel --prod",
    "deploy:preview": "vercel",
    "vercel:env": "powershell -ExecutionPolicy Bypass -File scripts/setup-vercel-env.ps1",
    "clean": "rm -rf .next node_modules/.cache coverage",
    "clean:install": "rm -rf node_modules package-lock.json && npm install",
    "security:audit": "npm audit --audit-level=high",
    "security:check": "bash scripts/security/check-all-secrets.sh",
    "security:check-code": "bash scripts/security/check-hardcoded-secrets.sh",
    "security:check-docs": "bash scripts/security/check-secrets-in-docs.sh",
    "security:secrets": "bash scripts/security/check-all-secrets.sh",
    "security:npm": "npm audit --audit-level=moderate",
    "health:check": "curl -f http://localhost:3000/api/health || exit 1",
    "health:test": "node scripts/health-test.js",
    "oauth:diagnose": "node scripts/diagnose-oauth-issue.js",
    "oauth:fix": "./scripts/quick-fix-oauth.sh",
    "oauth:test": "node scripts/test-oauth-flow.cjs",
    "oauth:setup": "node scripts/setup-vercel-oauth.cjs",
    "time:kst": "node -e \"console.log('🕒 한국시간:', new Date().toLocaleString('ko-KR', {timeZone: 'Asia/Seoul'}) + ' (KST)')\"",
    "time:commit": "node -e \"console.log('커밋시간:', '(' + new Date().toLocaleString('sv-SE', {timeZone: 'Asia/Seoul'}).substring(0, 16) + ' KST)')\"",
    "gcp:monitor": "node scripts/gcp-quota-monitor.js monitor",
    "gcp:optimize": "node scripts/gcp-quota-monitor.js optimize",
    "gcp:check": "node scripts/gcp-quota-monitor.js check",
    "gcp:alert": "node scripts/gcp-quota-alert.js",
    "gcp:console": "node scripts/gcp-console-helper.js",
    "gcp:quota-report": "node scripts/gcp-quota-report.js",
    "git:push": "powershell -ExecutionPolicy Bypass -File scripts/git-push-helper.ps1",
    "git:secure-push": "node scripts/github-auth-helper.cjs push",
    "usage": "echo '🎯 Claude Code 사용량 모니터링' && echo '━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━' && echo '💡 명령어:' && echo '  npx ccusage@latest blocks --live    # 실시간 대시보드' && echo '  npx ccusage@latest blocks --active  # 현재 과금 블록' && echo '  npx ccusage@latest daily           # 일별 사용량' && echo '  npx ccusage@latest session         # 현재 세션' && echo '━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━'",
    "system:health": "bash scripts/system-health-check.sh",
    "system:health:watch": "watch -n 30 'npm run system:health'",
    "system:status": "npm run system:health && echo '' && npm run gcp:check && echo '' && npm run redis:test",
    "tavily:test": "node scripts/test-tavily-setup.cjs",
    "ccusage:live": "npx ccusage@latest blocks --live",
    "ccusage:blocks": "npx ccusage@latest blocks --active",
    "ccusage:daily": "npx ccusage@latest daily",
    "verify:oauth": "node scripts/verify-oauth-setup.js",
    "mcp:check": "powershell -ExecutionPolicy Bypass -File scripts/check-mcp-status.ps1",
    "mcp:fix": "powershell -ExecutionPolicy Bypass -File scripts/fix-global-mcp.ps1",
    "mcp:test-tavily": "node scripts/test-tavily-mcp.mjs",
    "mcp:reset": "bash scripts/mcp/reset.sh",
    "doc:organize": "bash scripts/organize-docs.sh",
    "doc:analyze": "node scripts/analyze-docs.js",
    "doc:summary": "echo '📚 문서 현황 요약' && find . -name '*.md' -not -path './node_modules/*' -not -path './.next/*' | wc -l | xargs echo '└─ 전체 Markdown 파일:' && find docs -name '*.md' 2>/dev/null | wc -l | xargs echo '└─ docs 폴더:' && find reports -name '*.md' 2>/dev/null | wc -l | xargs echo '└─ reports 폴더:' && ls -la *.md 2>/dev/null | wc -l | xargs echo '└─ 루트 문서:'",
    "doc:clean": "bash scripts/cleanup-legacy-docs.sh",
    "doc:count": "node scripts/simple-doc-counter.js",
    "code:stats": "cloc src --exclude-dir=test,__tests__,node_modules --json > code-stats.json && echo 'Code statistics saved to code-stats.json'",
    "code:todos": "grep -r 'TODO\\|FIXME\\|HACK\\|XXX' src --exclude-dir=node_modules,test,.next | sort",
    "code:complexity": "npx complexity-report-cli src/**/*.{ts,tsx} --format json > complexity-report.json",
    "db:status": "node scripts/db-connection-test.js",
    "db:migrate": "npx supabase db push",
    "db:seed": "node scripts/seed-database.js",
    "db:reset": "node scripts/reset-database.js",
    "monitor:start": "pm2 start ecosystem.config.js",
    "monitor:stop": "pm2 stop all",
    "monitor:logs": "pm2 logs",
    "monitor:status": "pm2 status",
    "deps:check": "npx npm-check-updates",
    "deps:update": "npx npm-check-updates -u && npm install",
    "deps:audit": "npm audit && npm outdated",
    "lighthouse": "npx lighthouse http://localhost:3000 --view",
    "lighthouse:ci": "npx lighthouse http://localhost:3000 --output=json --output-path=./lighthouse-report.json",
    "ngrok": "npx ngrok http 3000",
    "serve": "npx serve out",
    "check:types": "tsc --noEmit --skipLibCheck",
    "check:deps": "depcheck",
    "check:all": "npm run type-check && npm run lint && npm run test:unit"
  },
  "dependencies": {
    "@emotion/is-prop-valid": "^1.3.1",
    "@faker-js/faker": "^9.9.0",
    "@google/generative-ai": "^0.24.1",
    "@heroicons/react": "^2.2.0",
    "@next/bundle-analyzer": "15.1.5",
    "@octokit/rest": "^21.0.2",
    "@radix-ui/react-accordion": "^1.2.11",
    "@radix-ui/react-alert-dialog": "^1.1.4",
    "@radix-ui/react-collapsible": "^1.1.11",
    "@radix-ui/react-dialog": "^1.1.4",
    "@radix-ui/react-dropdown-menu": "^2.1.4",
    "@radix-ui/react-icons": "^1.3.2",
    "@radix-ui/react-label": "^2.1.1",
    "@radix-ui/react-popover": "^1.1.4",
    "@radix-ui/react-progress": "^1.1.1",
    "@radix-ui/react-scroll-area": "^1.2.9",
    "@radix-ui/react-select": "^2.1.4",
    "@radix-ui/react-separator": "^1.1.1",
    "@radix-ui/react-slot": "^1.1.1",
    "@radix-ui/react-switch": "^1.1.2",
    "@radix-ui/react-tabs": "^1.1.2",
    "@radix-ui/react-toast": "^1.2.14",
    "@radix-ui/react-tooltip": "^1.1.6",
    "@supabase/ssr": "^0.5.2",
    "@supabase/supabase-js": "^2.48.0",
    "@tanstack/react-query": "^5.66.1",
    "@tanstack/react-query-devtools": "^5.66.1",
    "@upstash/redis": "^1.34.3",
    "@use-gesture/react": "^10.3.1",
    "@vercel/analytics": "^1.4.1",
    "@vercel/speed-insights": "^1.1.0",
    "ai": "^4.0.36",
    "axios": "^1.7.9",
    "chart.js": "^4.4.8",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "crypto-js": "^4.2.0",
    "date-fns": "^4.1.0",
    "framer-motion": "^11.16.0",
    "ioredis": "^5.6.1",
    "lucide-react": "^0.533.0",
    "next": "15.1.5",
    "next-auth": "5.0.0-beta.25",
    "next-themes": "^0.4.4",
    "react": "^18.2.0",
    "react-chartjs-2": "^5.3.0",
    "react-dom": "^18.2.0",
    "react-error-boundary": "^4.1.2",
    "react-hook-form": "^7.54.2",
    "react-hot-toast": "^2.4.1",
    "react-markdown": "^9.0.3",
    "react-syntax-highlighter": "^15.6.1",
    "recharts": "^2.15.0",
    "remark-gfm": "^4.0.0",
    "socket.io-client": "^4.8.1",
    "sonner": "^1.7.2",
    "tailwind-merge": "^2.6.0",
    "tailwindcss-animate": "^1.0.7",
    "vaul": "^1.1.2",
    "zod": "^3.24.1",
    "zustand": "^5.0.2"
  },
  "devDependencies": {
    "@playwright/test": "^1.49.1",
    "@testing-library/dom": "^10.4.0",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.1.0",
    "@testing-library/user-event": "^14.5.2",
    "@types/crypto-js": "^4.2.2",
    "@types/node": "^22.10.5",
    "@types/react": "^18.3.16",
    "@types/react-dom": "^18.3.5",
    "@types/react-syntax-highlighter": "^15.5.13",
    "@typescript-eslint/eslint-plugin": "^8.19.0",
    "@typescript-eslint/parser": "^8.19.0",
    "@vitejs/plugin-react": "^4.3.4",
    "@vitest/coverage-v8": "^2.1.8",
    "@vitest/ui": "^2.1.8",
    "autoprefixer": "^10.4.20",
    "cross-env": "^7.0.3",
    "dotenv": "^16.4.5",
    "eslint": "^9.17.0",
    "eslint-config-next": "15.1.5",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.2.1",
    "eslint-plugin-react-hooks": "^5.1.0",
    "glob": "^11.0.0",
    "husky": "^9.1.7",
    "jsdom": "^26.0.0",
    "lint-staged": "^16.1.2",
    "playwright": "^1.49.1",
    "postcss": "^8.4.49",
    "prettier": "^3.4.2",
    "tailwindcss": "^3.4.17",
    "tsx": "^4.19.2",
    "typescript": "^5.7.2",
    "vite": "^6.3.5",
    "vitest": "^2.1.8"
  },
  "engines": {
    "node": ">=20.11.0",
    "npm": ">=10.2.4"
  },
  "overrides": {
    "@supabase/supabase-js": {
      "@supabase/node-fetch": "2.6.15"
    }
  },
  "volta": {
    "node": "22.15.1"
  }
}
