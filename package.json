{
  "name": "openmanager-vibe-v5",
  "version": "5.80.0",
  "private": true,
  "scripts": {
    "scan:unicode": "node scripts/dev/find-invalid-unicode.js",
    "check:claude": "wsl ./scripts/windows-support/utils/run-claude.sh",
    "claude:launch": "bash scripts/ai/launch-claude-wsl.sh",
    "claude:sanitize": "node scripts/diagnostics/claude-json-sanitize.js --write",
    "mcp:status": "claude mcp list",
    "dev": "NODE_OPTIONS='--max-old-space-size=4096' next dev -p 3000",
    "dev:safe": "./scripts/dev-server-manager.sh start",
    "dev:check": "./scripts/dev-server-manager.sh status",
    "dev:stop": "./scripts/dev-server-manager.sh stop",
    "dev:restart": "./scripts/dev-server-manager.sh restart",
    "dev:stable": "NEXT_DISABLE_DEVTOOLS=1 NODE_OPTIONS='--max-old-space-size=4096' next dev",
    "dev:clean": "NEXT_DISABLE_DEVTOOLS=1 NEXT_TELEMETRY_DISABLED=1 NODE_OPTIONS='--max-old-space-size=4096' next dev -p 3000",
    "dev:playwright": "NEXT_DISABLE_DEVTOOLS=1 NODE_OPTIONS='--max-old-space-size=4096' next dev -p 3000",
    "index:background": "ts-node scripts/indexing/background-indexing.ts",
    "index:background:help": "ts-node scripts/indexing/background-indexing.ts help",
    "optimize:ann": "ts-node scripts/optimization/ann-search-upgrade.ts",
    "optimize:ann:help": "ts-node scripts/optimization/ann-search-upgrade.ts help",
    "build": "NODE_OPTIONS='--max-old-space-size=2048' next build",
    "build:prod": "NODE_OPTIONS='--max-old-space-size=2048' NEXT_DISABLE_DEVTOOLS=1 next build",
    "build:vercel": "./.vercel-deploy-check.sh && npm run build:ci && npm run validate:quick",
    "deploy:safe": "./.vercel-deploy-check.sh && npx vercel --prod",
    "start": "next start",
    "start:prod": "NODE_ENV=production next start",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix",
    "lint:strict": "eslint . --max-warnings=0",
    "lint:fast": "eslint src/ --config config/eslint-backups/eslint.config.fast.mjs --cache",
    "format": "prettier --write \"src/**/*.{js,jsx,ts,tsx,json,css,scss,md}\"",
    "format:check": "prettier --check \"src/**/*.{js,jsx,ts,tsx,json,css,scss,md}\"",
    "test": "vitest run --config config/testing/vitest.config.main.ts",
    "test:quick": "vitest run --config config/testing/vitest.config.minimal.ts",
    "test:coverage": "vitest run --config config/testing/vitest.config.simple.ts --coverage",
    "test:watch": "vitest --config config/testing/vitest.config.simple.ts",
    "test:e2e": "playwright test",
    "test:e2e:critical": "playwright test tests/e2e/basic-smoke.spec.ts tests/e2e/quick-check.spec.ts tests/e2e/admin-page-access.spec.ts --config playwright.config.ts",
    "test:e2e:full": "playwright test --config playwright.config.ts",
    "test:e2e:local": "playwright test --config playwright.config.ts",
    "test:e2e:with-server": "PORT=3000 npm run dev:stable & sleep 5 && playwright test --config playwright.config.ts; kill %1",
    "test:comprehensive": "playwright test tests/e2e/comprehensive-user-flow.spec.ts --headed --timeout=120000",
    "test:vercel:e2e": "PLAYWRIGHT_BASE_URL=\"https://openmanager-vibe-v5.vercel.app\" VERCEL_PRODUCTION_URL=\"https://openmanager-vibe-v5.vercel.app\" playwright test --config playwright.config.ts",
    "test:vercel:comprehensive": "playwright test tests/e2e/comprehensive-user-flow.spec.ts --headed --timeout=120000 --reporter=list",
    "test:vercel": "./scripts/vercel-production-test.sh",
    "test:ai": "npm run test:vercel",
    "test:fast": "npm run test",
    "test:super-fast": "npm run test:quick",
    "test:performance": "VERCEL_PRODUCTION_URL=\"https://openmanager-vibe-v5-jns171qwy-skyasus-projects.vercel.app\" npm run test:vercel:e2e -- --grep \"성능\"",
    "lighthouse:vercel": "lighthouse \"https://openmanager-vibe-v5-jns171qwy-skyasus-projects.vercel.app\" --output=json --output-path=./reports/lighthouse-vercel.json --chrome-flags=\"--headless\"",
    "test:dev": "npm-run-all --parallel test:quick test:vercel",
    "test:smart-select": "node scripts/testing/smart-test-selector.js",
    "subagent:test": "node scripts/testing/subagent-test-runner.js --fast",
    "subagent:test:thorough": "node scripts/testing/subagent-test-runner.js --thorough",
    "subagent:test:comprehensive": "node scripts/testing/subagent-test-runner.js --comprehensive",
    "subagent:test:e2e": "node scripts/testing/subagent-test-runner.js --focus e2e --thorough",
    "subagent:test:api": "node scripts/testing/subagent-test-runner.js --focus api --fast",
    "subagent:test:unit": "node scripts/testing/subagent-test-runner.js --focus unit --fast",
    "subagent:test:playwright": "node scripts/testing/subagent-test-runner.js --focus playwright --thorough",
    "subagent:test:vitals": "node scripts/testing/subagent-test-runner.js --focus vitals --comprehensive",
    "subagent:plan": "node scripts/testing/subagent-test-runner.js --comprehensive --dry-run",
    "subagent:history": "node scripts/testing/subagent-test-runner.js --history",
    "subagent:trend": "node scripts/testing/subagent-test-runner.js --trend",
    "subagent:recommendations": "node scripts/testing/subagent-test-runner.js --recommendations",
    "lighthouse:local": "NODE_ENV=production npm run build && npm run start & sleep 5 && lhci collect --url=http://localhost:3000 && kill %1",
    "performance:alerts": "node scripts/performance/performance-alert-system.js",
    "type-check": "node scripts/dev/tsc-wrapper.js --noEmit",
    "type-check:fast": "node scripts/dev/tsc-wrapper.js --noEmit",
    "test:ci:fast": "vitest run --config config/testing/vitest.config.minimal.ts",
    "prepare": "husky || true",
    "validate": "npm run type-check && npm run lint:quick",
    "validate:all": "npm run type-check && npm run lint && npm run test",
    "validate:env": "node scripts/validate-env.js",
    "verify:ai-cli": "bash scripts/ai-cli-verification.sh",
    "verify:fast": "bash scripts/ai-cli-verification.sh && echo '✅ 96.4% 더 빠른 AI CLI 검증 완료'",
    "deploy:check": "npm run validate:env && npm run type-check && npm run test:quick",
    "clean": "rm -rf .next node_modules/.cache",
    "clean:all": "rm -rf .next node_modules package-lock.json && npm install",
    "generate:server-data": "tsx scripts/generate-server-data.ts",
    "ci": "npm run validate:all",
    "health:check": "node scripts/health-check.js",
    "bundle:analyze": "BUNDLE_ANALYZE=browser npm run build",
    "git:pre-commit": "lint-staged",
    "git:pre-push": "npm run validate",
    "check:usage": "node scripts/check-free-tier-usage.js",
    "perf:analyze": "node scripts/performance/core-web-vitals-analysis.js",
    "perf:report": "node scripts/performance/report.js",
    "perf:react-analyze": "node scripts/performance/simple-react-analyzer.js",
    "perf:react-optimize": "node scripts/performance/apply-react-optimizations.js",
    "perf:react-optimize:dry": "node scripts/performance/apply-react-optimizations.js --dry-run",
    "perf:lint-benchmark": "node scripts/performance/lint-benchmark.js",
    "perf:precommit-benchmark": "node scripts/performance/precommit-benchmark.js",
    "perf:all-benchmarks": "npm run perf:lint-benchmark && npm run perf:precommit-benchmark",
    "perf:quick": "node scripts/performance/quick-benchmark.js",
    "vitals:integration": "vitest run tests/performance/web-vitals-integration.test.ts --reporter=verbose",
    "vitals:e2e": "playwright test tests/e2e/web-vitals-real.spec.ts",
    "vitals:mock": "npm run test tests/performance/core-web-vitals.test.ts",
    "vitals:all": "npm-run-all --parallel vitals:integration vitals:e2e vitals:mock",
    "vitals:api-test": "curl -X GET http://localhost:3000/api/web-vitals && echo",
    "vitals:universal": "vitest run tests/integration/universal-vitals-integration.test.ts --reporter=verbose",
    "vitals:universal-api": "curl -X GET http://localhost:3000/api/universal-vitals && echo",
    "vitals:playwright-integration": "playwright test --config=config/testing/playwright-vitals.config.ts",
    "vitals:full-integration": "npm-run-all --parallel vitals:universal vitals:playwright-integration vitals:universal-api",
    "security:audit": "npm audit --audit-level=moderate && claude /security-review && node scripts/env/check-hardcoded-secrets.js",
    "ai-tools:check": "bash scripts/check-ai-tools-updates.sh",
    "ai-tools:update": "bash scripts/ai-tools-auto-update.sh",
    "ai-tools:remove-cron": "bash scripts/setup-ai-tools-cron.sh",
    "ai:context-check": "node scripts/check-ai-context.js",
    "env:check": "node scripts/check-env.js",
    "dev:tmux:enhanced": "bash scripts/dev-tmux-enhanced.sh",
    "dev:tmux:test": "AUTO_START_TEST_SERVER=true bash scripts/dev-tmux-enhanced.sh",
    "dev:tmux:clean": "tmux kill-session -t openmanager-dev",
    "dev:ai-safe": "bash scripts/dev-safe.sh && NODE_OPTIONS='--max-old-space-size=4096' next dev",
    "dev:ai-safe:port": "bash scripts/dev-safe.sh npm run dev:ai-port",
    "dev:ai-port": "node -e \"const { getAvailablePort } = require('./utils/dynamic-port'); getAvailablePort().then(port => { process.env.PORT = port; require('child_process').spawn('npm', ['run', 'dev'], { env: { ...process.env, PORT: port }, stdio: 'inherit' }); });\"",
    "wsl:dev": "bash scripts/dev-safe.sh && npm run dev:stable",
    "wsl:stable": "./scripts/wsl-native-dev.sh stable",
    "wsl:clean": "./scripts/wsl-native-dev.sh clean",
    "wsl:claude": "./scripts/wsl-native-dev.sh claude",
    "wsl:playwright": "./scripts/wsl-native-dev.sh playwright",
    "wsl:build": "./scripts/wsl-native-dev.sh build",
    "wsl:status": "./scripts/wsl-native-dev.sh status",
    "wsl:stop": "./scripts/wsl-native-dev.sh stop"
  },
  "dependencies": {
    "@anthropic-ai/claude-code": "^2.0.14",
    "@faker-js/faker": "^9.9.0",
    "@google/generative-ai": "^0.24.1",
    "@radix-ui/react-accordion": "^1.2.11",
    "@radix-ui/react-collapsible": "^1.1.11",
    "@radix-ui/react-dialog": "^1.1.4",
    "@radix-ui/react-label": "^2.1.1",
    "@radix-ui/react-popover": "^1.1.4",
    "@radix-ui/react-scroll-area": "^1.2.9",
    "@radix-ui/react-select": "^2.1.4",
    "@radix-ui/react-separator": "^1.1.1",
    "@radix-ui/react-slot": "^1.1.1",
    "@radix-ui/react-switch": "^1.1.2",
    "@radix-ui/react-tabs": "^1.1.2",
    "@radix-ui/react-toast": "^1.2.14",
    "@radix-ui/react-tooltip": "^1.1.6",
    "@supabase/ssr": "^0.5.2",
    "@supabase/supabase-js": "^2.48.0",
    "@tanstack/react-query": "^5.66.1",
    "@tanstack/react-query-devtools": "^5.66.1",
    "@types/react-window": "^1.8.8",
    "@vercel/analytics": "^1.5.0",
    "@vercel/speed-insights": "^1.2.0",
    "chart.js": "^4.5.0",
    "class-variance-authority": "^0.7.0",
    "clsx": "^2.1.1",
    "crypto-js": "^4.2.0",
    "dotenv": "^16.6.1",
    "lucide-react": "^0.441.0",
    "next": "^15.5.5",
    "next-auth": "5.0.0-beta.25",
    "react": "18.3.1",
    "react-chartjs-2": "^5.3.0",
    "react-dom": "18.3.1",
    "react-error-boundary": "^4.0.13",
    "react-hot-toast": "^2.4.1",
    "react-markdown": "^9.0.1",
    "react-window": "^2.2.1",
    "recharts": "^3.2.1",
    "rxjs": "^7.8.1",
    "sharp": "^0.33.4",
    "socket.io-client": "^4.8.0",
    "swr": "^2.2.5",
    "tailwind-merge": "^2.5.2",
    "tailwindcss-animate": "^1.0.7",
    "ts-node": "^10.9.2",
    "vaul": "^0.9.1",
    "web-vitals": "^5.1.0",
    "zod": "^3.23.8",
    "zustand": "^4.5.7"
  },
  "devDependencies": {
    "@eslint/js": "^9.17.0",
    "@executeautomation/playwright-mcp-server": "^1.0.6",
    "@next/bundle-analyzer": "^15.5.0",
    "@playwright/test": "^1.49.1",
    "@testing-library/dom": "^10.4.0",
    "@testing-library/jest-dom": "^6.8.0",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/crypto-js": "^4.2.2",
    "@types/node": "^22.5.0",
    "@types/react": "^18.3.3",
    "@types/react-dom": "^18.3.0",
    "@types/socket.io": "^3.0.2",
    "@vitest/ui": "^3.2.4",
    "autoprefixer": "^10.4.21",
    "cross-env": "^7.0.3",
    "eslint": "^9.17.0",
    "eslint-config-next": "^15.4.6",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-k6-linting-rules": "^1.0.2",
    "eslint-plugin-react-hooks": "^5.2.0",
    "globals": "^16.3.0",
    "husky": "^9.1.7",
    "jsdom": "^26.0.0",
    "lint-staged": "^16.1.2",
    "playwright": "^1.55.0",
    "postcss": "^8.5.6",
    "prettier": "^3.4.2",
    "prettier-plugin-tailwindcss": "^0.6.14",
    "tailwindcss": "^3.4.17",
    "typescript": "^5.7.2",
    "typescript-eslint": "^8.39.1",
    "vitest": "^3.2.4"
  },
  "engines": {
    "node": "22.x",
    "npm": ">=10.0.0"
  },
  "packageManager": "npm@10.9.2",
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --cache --cache-location /tmp/lint-cache/eslint-precommit/ --max-warnings=20 --fix",
      "prettier --write"
    ],
    "*.{json,md,mdx,css,scss}": [
      "prettier --write"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "prettier": {
    "semi": true,
    "singleQuote": true,
    "tabWidth": 2,
    "trailingComma": "es5",
    "printWidth": 80,
    "bracketSpacing": true,
    "arrowParens": "always",
    "endOfLine": "lf",
    "plugins": [
      "prettier-plugin-tailwindcss"
    ]
  }
}
