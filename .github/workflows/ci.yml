name: 🚀 OpenManager v5 CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  NEXT_TELEMETRY_DISABLED: 1

jobs:
  build-and-test:
    name: 🏗️ Build & Test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: 📁 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 🔧 Install dependencies
      run: npm ci --prefer-offline --no-audit --no-fund
      
    - name: 🔍 Run TypeScript check
      run: npm run type-check
      continue-on-error: false
      
    - name: 🏗️ Build application
      run: npm run build
      env:
        NODE_ENV: production
        SKIP_ENV_VALIDATION: true
        NODE_OPTIONS: --max-old-space-size=4096
        
    - name: 🧪 Run unit tests
      run: npm run test:unit
      continue-on-error: true
      
    - name: 📊 Upload build artifacts
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: build-output
        path: .next
        retention-days: 1

  deploy:
    name: 🚀 Deploy to Vercel
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: 📁 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📥 Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-output
        path: .next
        
    - name: 🚀 Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        working-directory: ./
        
  health-check:
    name: 🏥 Health Check
    runs-on: ubuntu-latest
    needs: deploy
    if: success()
    
    steps:
    - name: 🏥 Check deployment health
      run: |
        echo "🔍 Checking deployment health..."
        sleep 30
        curl -f https://openmanager-vibe-v5.vercel.app/api/health || exit 1
        echo "✅ Health check passed!" 