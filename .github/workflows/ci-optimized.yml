name: CI/CD Optimized (Free Tier)

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '22.15.1'
  SKIP_ENV_VALIDATION: true

jobs:
  # 🚀 핵심 검증 (빠른 실행)
  essential-check:
    name: Essential Check
    runs-on: ubuntu-latest
    # Fast Track: commit 메시지에 [skip ci] 또는 [fast-track] 포함 시 완전 스킵
    if: "!contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[fast-track]')"
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: TypeScript Check (Critical)
        run: npm run type-check

      - name: ESLint (Warning Only)
        run: npm run lint --max-warnings=50
        continue-on-error: true

      - name: Quick Tests (22ms)
        run: npm run test:quick
        continue-on-error: true

      - name: Build Check (Skip on Fast Track)
        run: |
          if [[ "${{ github.event.head_commit.message }}" == *"[build-skip]"* ]]; then
            echo "⚡ Build check skipped (fast track)"
          else
            npm run build
          fi

  # 🔒 보안 검사 (main 브랜치만, 백그라운드)
  security-check:
    name: Security Check
    runs-on: ubuntu-latest
    if: "github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, '[skip ci]')"
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Security Audit (Non-blocking)
        run: npm audit --audit-level=high
        continue-on-error: true

  # 📊 성능 체크 (PR만, 백그라운드)
  performance-check:
    name: Performance Check
    runs-on: ubuntu-latest
    if: "github.event_name == 'pull_request' && !contains(github.event.head_commit.message, '[skip ci]')"
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4

      - name: Quick Bundle Size Check
        run: |
          echo "📊 번들 크기 체크 스킵 (Vercel에서 처리)"
          echo "🚀 성능 최적화는 Vercel Analytics 활용"

  # ✅ 배포 준비 확인 (선택적)
  deploy-ready:
    name: Deploy Ready
    runs-on: ubuntu-latest
    needs: [essential-check]
    if: "github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - name: Deployment Status
        run: |
          echo "🎉 Essential checks passed!"
          echo "✅ TypeScript: Clean"
          echo "⚡ Fast Track: 베르셀 배포 우선"
          echo "🔄 품질 체크: 백그라운드에서 진행"
          echo "🚀 Ready for Vercel deployment!"
