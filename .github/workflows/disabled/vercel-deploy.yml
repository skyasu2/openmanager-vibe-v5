name: 🚀 Vercel Production Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  # 1단계: 코드 품질 검증
  quality-check:
    name: 📋 Quality Check
    runs-on: ubuntu-latest
    steps:
      - name: 📂 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 📝 TypeScript check
        run: npm run type-check

      - name: 🔧 ESLint check
        run: npm run lint

      - name: 🧪 Run tests
        run: npm run test:unit

      - name: 🏗️ Build check
        run: npm run build

  # 2단계: Vercel 배포 (Production)
  deploy-production:
    name: 🚀 Deploy to Production
    runs-on: ubuntu-latest
    needs: quality-check
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: 📂 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📥 Install Vercel CLI
        run: npm install --global vercel@latest

      - name: 🔗 Pull Vercel Environment
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: 🏗️ Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: 🚀 Deploy to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

  # 3단계: Vercel 배포 (Preview) - PR용
  deploy-preview:
    name: 🔍 Deploy Preview
    runs-on: ubuntu-latest
    needs: quality-check
    if: github.event_name == 'pull_request'
    steps:
      - name: 📂 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📥 Install Vercel CLI
        run: npm install --global vercel@latest

      - name: 🔗 Pull Vercel Environment
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: 🏗️ Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: 🔍 Deploy Preview
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

  # 4단계: 배포 후 검증
  post-deploy:
    name: ✅ Post-Deploy Check
    runs-on: ubuntu-latest
    needs: deploy-production
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: ⏳ Wait for deployment
        run: sleep 30

      - name: 🏥 Health check
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" https://openmanager-vibe-v5.vercel.app/api/health)
          if [ $response -eq 200 ]; then
            echo "✅ Health check passed (Status: $response)"
          else
            echo "❌ Health check failed (Status: $response)"
            exit 1
          fi

      - name: 🎉 Deployment success
        run: |
          echo "🎉 배포 성공!"
          echo "📍 URL: https://openmanager-vibe-v5.vercel.app"
          echo "📊 Dashboard: https://vercel.com/skyasus-projects/openmanager-vibe-v5"
          echo "🕐 배포 시간: $(date)"
