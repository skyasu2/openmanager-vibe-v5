name: ü§ñ E2E Tests - OpenManager VIBE

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Îß§Ïùº Ïò§Ï†Ñ 9Ïãú (UTC) - ÌïúÍµ≠ÏãúÍ∞Ñ Ïò§ÌõÑ 6Ïãú
    - cron: '0 9 * * *'
  workflow_dispatch:
    inputs:
      test_category:
        description: 'ÌÖåÏä§Ìä∏ Ïπ¥ÌÖåÍ≥†Î¶¨ ÏÑ†ÌÉù'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - basic
          - ai
          - performance
          - visual
          - accessibility
      browser:
        description: 'Î∏åÎùºÏö∞Ï†Ä ÏÑ†ÌÉù'
        required: false
        default: 'chromium'
        type: choice
        options:
          - chromium
          - firefox
          - webkit
          - all
      headless:
        description: 'Headless Î™®Îìú'
        required: false
        default: true
        type: boolean

env:
  NODE_VERSION: '22.x'
  NEXT_PUBLIC_APP_URL: 'http://localhost:3000'
  CI: true

jobs:
  # üîß Í∏∞Î≥∏ ÏÑ§Ï†ï Î∞è Ï¢ÖÏÜçÏÑ± ÏÑ§Ïπò
  setup:
    name: üîß Setup & Dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    outputs:
      cache-hit: ${{ steps.cache.outputs.cache-hit }}
      
    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v4
        
      - name: üü¢ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: üì¶ Cache Dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-deps-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-deps-
            
      - name: üì• Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          npm ci
          npx playwright install chromium firefox webkit
          npx playwright install-deps
          
      - name: üîç Verify Installation
        run: |
          npm --version
          node --version
          npx playwright --version

  # üèóÔ∏è Ïï†ÌîåÎ¶¨ÏºÄÏù¥ÏÖò ÎπåÎìú
  build:
    name: üèóÔ∏è Build Application
    runs-on: ubuntu-latest
    needs: setup
    timeout-minutes: 15
    
    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v4
        
      - name: üü¢ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: üì¶ Restore Dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-deps-${{ hashFiles('package-lock.json') }}
          
      - name: üèóÔ∏è Build Next.js Application
        run: |
          npm run build
          npm run type-check
          
      - name: üìÅ Cache Build
        uses: actions/cache@v4
        with:
          path: .next
          key: ${{ runner.os }}-build-${{ github.sha }}

  # üß™ E2E ÌÖåÏä§Ìä∏ Ïã§Ìñâ (Í∏∞Î≥∏)
  e2e-basic:
    name: üß™ E2E Basic Tests
    runs-on: ubuntu-latest
    needs: [setup, build]
    timeout-minutes: 20
    
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox]
        
    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v4
        
      - name: üü¢ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: üì¶ Restore Dependencies & Build
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.cache/ms-playwright
            .next
          key: ${{ runner.os }}-deps-${{ hashFiles('package-lock.json') }}
          
      - name: üöÄ Start Development Server
        run: |
          npm run dev &
          sleep 15
          curl -f http://localhost:3000 || exit 1
          
      - name: üß™ Run Basic E2E Tests
        run: |
          npm run test:e2e -- \
            --project=${{ matrix.browser }} \
            --reporter=json,github \
            --output-dir=test-results-basic \
            tests/e2e/comprehensive-ui-ux-test.spec.ts \
            tests/e2e/admin-mode-improved.spec.ts
            
      - name: üìÑ Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-basic-results-${{ matrix.browser }}
          path: |
            test-results-basic/
            playwright-report/
          retention-days: 7

  # ü§ñ AI Í∏∞Îä• ÌÖåÏä§Ìä∏
  e2e-ai:
    name: ü§ñ E2E AI Tests
    runs-on: ubuntu-latest
    needs: [setup, build]
    timeout-minutes: 25
    if: ${{ github.event.inputs.test_category == 'ai' || github.event.inputs.test_category == 'all' || github.event_name != 'workflow_dispatch' }}
    
    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v4
        
      - name: üü¢ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: üì¶ Restore Dependencies & Build
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.cache/ms-playwright
            .next
          key: ${{ runner.os }}-deps-${{ hashFiles('package-lock.json') }}
          
      - name: üöÄ Start Development Server
        run: |
          npm run dev &
          sleep 20
          curl -f http://localhost:3000 || exit 1
          
      - name: ü§ñ Run AI Assistant Tests
        run: |
          npm run test:e2e -- \
            --project=chromium \
            --reporter=json,github \
            --output-dir=test-results-ai \
            tests/e2e/ai-assistant-advanced-test.spec.ts
            
      - name: üìÑ Upload AI Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-ai-results
          path: |
            test-results-ai/
            playwright-report/
          retention-days: 7

  # ‚ö° ÏÑ±Îä• Î∞è ÏãúÍ∞ÅÏ†Å ÌöåÍ∑Ä ÌÖåÏä§Ìä∏
  e2e-performance:
    name: ‚ö° E2E Performance Tests
    runs-on: ubuntu-latest
    needs: [setup, build]
    timeout-minutes: 30
    if: ${{ github.event.inputs.test_category == 'performance' || github.event.inputs.test_category == 'visual' || github.event.inputs.test_category == 'all' || github.event_name == 'schedule' }}
    
    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v4
        
      - name: üü¢ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: üì¶ Restore Dependencies & Build
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.cache/ms-playwright
            .next
          key: ${{ runner.os }}-deps-${{ hashFiles('package-lock.json') }}
          
      - name: üöÄ Start Production Server
        run: |
          npm run start &
          sleep 20
          curl -f http://localhost:3000 || exit 1
          
      - name: ‚ö° Run Performance Tests
        run: |
          npm run test:e2e -- \
            --project=chromium \
            --reporter=json,github \
            --output-dir=test-results-performance \
            tests/e2e/performance-visual-regression.spec.ts
            
      - name: üìä Generate Lighthouse Report
        run: |
          npm install -g @lhci/cli
          lhci collect --url=http://localhost:3000 --output-dir=lighthouse-results
          
      - name: üìÑ Upload Performance Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-performance-results
          path: |
            test-results-performance/
            lighthouse-results/
            playwright-report/
          retention-days: 14

  # üìä ÌÖåÏä§Ìä∏ Í≤∞Í≥º ÌÜµÌï© Î∞è Î¶¨Ìè¨Ìä∏ ÏÉùÏÑ±
  test-report:
    name: üìä Generate Test Report
    runs-on: ubuntu-latest
    needs: [e2e-basic, e2e-ai, e2e-performance]
    if: always()
    timeout-minutes: 10
    
    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v4
        
      - name: üì• Download All Test Results
        uses: actions/download-artifact@v4
        with:
          path: all-test-results/
          
      - name: üü¢ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: üìä Generate Comprehensive Report
        run: |
          node -e "
          const fs = require('fs');
          const path = require('path');
          
          // ÌÖåÏä§Ìä∏ Í≤∞Í≥º ÏàòÏßë
          const resultsDir = './all-test-results';
          const categories = fs.readdirSync(resultsDir);
          
          let totalTests = 0;
          let totalPassed = 0;
          let totalFailed = 0;
          
          const report = {
            timestamp: new Date().toISOString(),
            categories: [],
            summary: {}
          };
          
          categories.forEach(category => {
            const categoryPath = path.join(resultsDir, category);
            if (fs.statSync(categoryPath).isDirectory()) {
              console.log('üìÇ Processing:', category);
              
              // JSON Í≤∞Í≥º ÌååÏùº Ï∞æÍ∏∞
              const files = fs.readdirSync(categoryPath);
              const jsonFile = files.find(f => f.endsWith('.json'));
              
              if (jsonFile) {
                try {
                  const data = JSON.parse(fs.readFileSync(path.join(categoryPath, jsonFile)));
                  // Í≤∞Í≥º Î∂ÑÏÑù Î°úÏßÅ
                  report.categories.push({
                    name: category,
                    results: 'processed'
                  });
                } catch (e) {
                  console.warn('Failed to parse:', jsonFile);
                }
              }
            }
          });
          
          // GitHub Step Summary ÏÉùÏÑ±
          const summary = \`
          ## ü§ñ OpenManager VIBE E2E ÌÖåÏä§Ìä∏ Í≤∞Í≥º
          
          ### üìä ÌÖåÏä§Ìä∏ Ïã§Ìñâ ÏöîÏïΩ
          - **Ïã§Ìñâ ÏãúÍ∞Ñ**: \${new Date().toLocaleString('ko-KR')}
          - **Î∏åÎûúÏπò**: \${process.env.GITHUB_REF_NAME || 'unknown'}
          - **Ïª§Î∞ã**: \${process.env.GITHUB_SHA?.substring(0, 7) || 'unknown'}
          
          ### üìã Ïπ¥ÌÖåÍ≥†Î¶¨Î≥Ñ Í≤∞Í≥º
          \${report.categories.map(cat => \`- \${cat.name}: ‚úÖ ÏôÑÎ£å\`).join('\\n')}
          
          ### üîó ÏÉÅÏÑ∏ Í≤∞Í≥º
          - [Playwright HTML Report](https://github.com/\${process.env.GITHUB_REPOSITORY}/actions/runs/\${process.env.GITHUB_RUN_ID})
          - [Performance Report](https://github.com/\${process.env.GITHUB_REPOSITORY}/actions/runs/\${process.env.GITHUB_RUN_ID})
          \`;
          
          if (process.env.GITHUB_STEP_SUMMARY) {
            fs.writeFileSync(process.env.GITHUB_STEP_SUMMARY, summary);
          }
          
          console.log('‚úÖ ÌÜµÌï© Î¶¨Ìè¨Ìä∏ ÏÉùÏÑ± ÏôÑÎ£å');
          "
          
      - name: üìÑ Create Summary Comment (PR only)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const summary = `
            ## ü§ñ E2E ÌÖåÏä§Ìä∏ Í≤∞Í≥º
            
            ‚úÖ **Î™®Îì† E2E ÌÖåÏä§Ìä∏Í∞Ä ÏôÑÎ£åÎêòÏóàÏäµÎãàÎã§!**
            
            - üß™ Í∏∞Î≥∏ UI/UX ÌÖåÏä§Ìä∏: ÏôÑÎ£å
            - ü§ñ AI Ïñ¥ÏãúÏä§ÌÑ¥Ìä∏ ÌÖåÏä§Ìä∏: ÏôÑÎ£å  
            - ‚ö° ÏÑ±Îä• Î∞è ÏãúÍ∞ÅÏ†Å ÌöåÍ∑Ä ÌÖåÏä§Ìä∏: ÏôÑÎ£å
            
            **Ïã§Ìñâ ÏãúÍ∞Ñ**: ${new Date().toLocaleString('ko-KR')}
            **ÌÖåÏä§Ìä∏ ÌôòÍ≤Ω**: Ubuntu Latest + Node.js 22.x
            
            ÏÉÅÏÑ∏ Í≤∞Í≥ºÎäî [Actions ÌÉ≠](${context.payload.pull_request.html_url}/checks)ÏóêÏÑú ÌôïÏù∏ÌïòÏÑ∏Ïöî.
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });

  # üö® Ïã§Ìå® ÏïåÎ¶º
  notify-failure:
    name: üö® Notify Test Failures
    runs-on: ubuntu-latest
    needs: [e2e-basic, e2e-ai, e2e-performance]
    if: failure() && (github.event_name == 'push' && github.ref == 'refs/heads/main')
    
    steps:
      - name: üö® Create Issue for Test Failure
        uses: actions/github-script@v7
        with:
          script: |
            const title = `üö® E2E ÌÖåÏä§Ìä∏ Ïã§Ìå® - ${new Date().toLocaleString('ko-KR')}`;
            const body = `
            ## üö® E2E ÌÖåÏä§Ìä∏ Ïã§Ìå® Î≥¥Í≥†
            
            **Î∏åÎûúÏπò**: ${context.ref}
            **Ïª§Î∞ã**: ${context.sha.substring(0, 7)}
            **Ïã§Ìñâ ÏãúÍ∞Ñ**: ${new Date().toISOString()}
            
            ### üìã Ïã§Ìå®Ìïú ÏûëÏóÖ
            ${'${{ needs.e2e-basic.result }}' !== 'success' ? '- ‚ùå Basic E2E Tests' : ''}
            ${'${{ needs.e2e-ai.result }}' !== 'success' ? '- ‚ùå AI Assistant Tests' : ''}
            ${'${{ needs.e2e-performance.result }}' !== 'success' ? '- ‚ùå Performance Tests' : ''}
            
            ### üîó ÎßÅÌÅ¨
            - [Ïã§Ìå®Ìïú ÏõåÌÅ¨ÌîåÎ°úÏö∞](${context.payload.repository.html_url}/actions/runs/${context.runId})
            - [Ïª§Î∞ã ÏÉÅÏÑ∏](${context.payload.repository.html_url}/commit/${context.sha})
            
            ### üõ†Ô∏è ÎåÄÏùë Î∞©Ïïà
            1. Î°úÍ∑∏Î•º ÌôïÏù∏ÌïòÏó¨ Ïã§Ìå® ÏõêÏù∏ ÌååÏïÖ
            2. ÌÖåÏä§Ìä∏ ÌôòÍ≤Ω Î∞è ÏÑ§Ï†ï Í≤ÄÌÜ†
            3. ÏΩîÎìú Î≥ÄÍ≤ΩÏÇ¨Ìï≠Ïù¥ ÌÖåÏä§Ìä∏Ïóê ÎØ∏ÏπòÎäî ÏòÅÌñ• Î∂ÑÏÑù
            4. ÌïÑÏöîÏãú ÌÖåÏä§Ìä∏ ÏºÄÏù¥Ïä§ ÏóÖÎç∞Ïù¥Ìä∏
            
            Ïù¥ Ïù¥ÏäàÎäî ÌÖåÏä§Ìä∏Í∞Ä ÏÑ±Í≥µÌïòÎ©¥ ÏûêÎèôÏúºÎ°ú Îã´ÌûôÎãàÎã§.
            `;
            
            // Í∏∞Ï°¥ Ïó¥Î¶∞ Ïù¥Ïäà ÌôïÏù∏
            const existingIssues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['e2e-test-failure'],
              state: 'open'
            });
            
            if (existingIssues.data.length === 0) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: body,
                labels: ['e2e-test-failure', 'bug', 'high-priority']
              });
            }

  # ‚úÖ ÏÑ±Í≥µ Ïãú Ïù¥Ïäà ÏûêÎèô Îã´Í∏∞
  close-failure-issues:
    name: ‚úÖ Close Failure Issues
    runs-on: ubuntu-latest
    needs: [e2e-basic, e2e-ai, e2e-performance]
    if: success() && (github.event_name == 'push' && github.ref == 'refs/heads/main')
    
    steps:
      - name: ‚úÖ Close E2E Failure Issues
        uses: actions/github-script@v7
        with:
          script: |
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['e2e-test-failure'],
              state: 'open'
            });
            
            for (const issue of issues.data) {
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                state: 'closed'
              });
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                body: `‚úÖ E2E ÌÖåÏä§Ìä∏Í∞Ä ÏÑ±Í≥µÌñàÏäµÎãàÎã§. Ïù¥ÏäàÎ•º ÏûêÎèôÏúºÎ°ú Îã´ÏäµÎãàÎã§.\n\n**Ìï¥Í≤∞ Ïª§Î∞ã**: ${context.sha.substring(0, 7)}`
              });
            }