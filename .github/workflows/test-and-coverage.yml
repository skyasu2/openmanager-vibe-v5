name: 🧪 Test & Coverage

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: 🧪 Unit Tests & Coverage
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
          
      - name: 🧹 Clear npm cache
        run: npm cache clean --force
          
      - name: 📦 Install dependencies
        run: |
          echo "Installing dependencies with CI optimizations..."
          npm ci --no-audit --no-fund --prefer-offline
        env:
          NODE_OPTIONS: '--max-old-space-size=4096'
          
      - name: 🔍 Pre-test diagnostics
        run: |
          echo "=== Environment ==="
          node --version
          npm --version
          echo "NODE_ENV: ${NODE_ENV:-not set}"
          echo "CI: ${CI:-not set}"
          echo "=== Memory ==="
          free -h
          echo "=== Dependencies ==="
          npm list --depth=0 | head -20
          
      - name: 🔍 Type check
        run: npm run type-check
        env:
          NODE_OPTIONS: '--max-old-space-size=4096'
          CI: true
          SKIP_ENV_VALIDATION: true
        
      - name: 🧪 Run unit tests
        run: npm run test:unit
        env:
          NODE_ENV: test
          CI: true
          SKIP_ENV_VALIDATION: true
          NODE_OPTIONS: '--max-old-space-size=4096'
        
      - name: 📊 Generate coverage report
        run: npm run test:unit:coverage
        env:
          NODE_ENV: test
          CI: true
          SKIP_ENV_VALIDATION: true
          NODE_OPTIONS: '--max-old-space-size=4096'
        
      - name: 📤 Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          
      - name: 💬 Comment PR with coverage
        if: github.event_name == 'pull_request'
        uses: romeovs/lcov-reporter-action@v0.3.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          lcov-file: ./coverage/lcov.info
          
  build:
    name: 🏗️ Build Check
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
          
      - name: 🧹 Clear npm cache
        run: npm cache clean --force
          
      - name: 📦 Install dependencies
        run: |
          echo "Installing dependencies for build..."
          npm ci --no-audit --no-fund --prefer-offline
        env:
          NODE_OPTIONS: '--max-old-space-size=4096'
        
      - name: 🏗️ Build project
        run: |
          echo "Building with production optimizations..."
          npm run build
        env:
          NODE_ENV: production
          CI: true
          SKIP_ENV_VALIDATION: true
          NODE_OPTIONS: '--max-old-space-size=4096'
          # 빌드 시 불필요한 검증 건너뛰기
          NEXT_TELEMETRY_DISABLED: 1
        
      - name: 📝 Build summary
        run: |
          echo "✅ Build completed successfully!" >> $GITHUB_STEP_SUMMARY
          echo "📦 Ready for deployment to Vercel" >> $GITHUB_STEP_SUMMARY
          echo "📊 Build size:" >> $GITHUB_STEP_SUMMARY
          du -sh .next/ >> $GITHUB_STEP_SUMMARY

  lint:
    name: 🔍 Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
          
      - name: 🧹 Clear npm cache
        run: npm cache clean --force
          
      - name: 📦 Install dependencies
        run: |
          echo "Installing dependencies for linting..."
          npm ci --no-audit --no-fund --prefer-offline
        env:
          NODE_OPTIONS: '--max-old-space-size=4096'
        
      - name: 🔍 Run ESLint
        run: npm run lint
        env:
          NODE_OPTIONS: '--max-old-space-size=4096'
          CI: true
          SKIP_ENV_VALIDATION: true 