{
  "statusLine": {
    "type": "command",
    "command": "npx -y ccusage statusline",
    "padding": 0
  },
  "locale": "ko-KR",
  "timezone": "Asia/Seoul",
  "permissions": {
    "allow": [
      "Bash(node:*)",
      "Bash(npm:*)",
      "Bash(git:*)",
      "Bash(claude:*)",
      "Bash(ccusage:*)",
      "mcp__*"
    ],
    "deny": ["Bash(rm -rf:*)", "Bash(sudo rm:*)"]
  },
  "hooks": {
    "PostToolUse": [
      {
        "comment": "테스트 파일 자동 검증",
        "matcher": "Write|Edit",
        "condition": "file.endsWith('.test.ts') || file.endsWith('.spec.ts') || file.endsWith('.test.tsx') || file.endsWith('.spec.tsx')",
        "action": {
          "type": "Task",
          "subagent_type": "test-automation-specialist",
          "prompt": "테스트 파일이 수정되었습니다. 테스트 실행 및 커버리지 확인"
        }
      },
      {
        "comment": "대형 파일 모듈화 (1500줄 초과)",
        "matcher": "Write|Edit",
        "condition": "file_lines > 1500",
        "action": {
          "type": "Task",
          "subagent_type": "structure-refactor-agent",
          "prompt": "1500줄을 초과하는 대형 파일이 감지되었습니다. 모듈화가 필요합니다."
        }
      },
      {
        "comment": "DB 쿼리 최적화",
        "matcher": "mcp__supabase__execute_sql",
        "condition": "execution_time > 100",
        "action": {
          "type": "Task",
          "subagent_type": "database-administrator",
          "prompt": "느린 쿼리가 감지되었습니다. EXPLAIN ANALYZE 및 인덱스 최적화 수행"
        }
      },
      {
        "comment": "빌드/테스트 실패 시 자동 디버깅",
        "matcher": "Bash",
        "condition": "(command.includes('npm run build') || command.includes('npm test')) && exit_code !== 0",
        "action": {
          "type": "Task",
          "subagent_type": "debugger-specialist",
          "prompt": "빌드 또는 테스트가 실패했습니다. 5단계 디버깅 프로세스를 시작합니다."
        }
      }
    ],
    "PreToolUse": [
      {
        "comment": "보안 민감 코드 사전 검사",
        "matcher": "Write|Edit",
        "condition": "path.includes('auth') || path.includes('payment') || path.includes('api/private') || path.includes('credentials')",
        "action": {
          "type": "Task",
          "subagent_type": "security-auditor",
          "prompt": "보안 민감 코드 변경이 감지되었습니다. 취약점 사전 검사를 수행합니다."
        }
      },
      {
        "comment": "커밋 전 품질 검사",
        "matcher": "Bash",
        "condition": "command.includes('git commit')",
        "action": {
          "type": "Task",
          "subagent_type": "quality-control-checker",
          "prompt": "커밋 전 코드 품질 검사: CLAUDE.md 규칙 준수, 파일 크기, SOLID 원칙 확인"
        }
      }
    ],
    "UserPromptSubmit": [
      {
        "comment": "복잡한 요청 자동 분해",
        "condition": "prompt.split(' && ').length > 3 || prompt.includes('전체') || prompt.includes('모든')",
        "action": {
          "type": "Task",
          "subagent_type": "central-supervisor",
          "prompt": "복잡한 작업이 감지되었습니다. 작업을 분해하고 적절한 에이전트에게 할당합니다."
        }
      }
    ]
  }
}
